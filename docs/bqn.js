"use strict";
// Virtual machine
let has = x => x!==undefined;
let call = (f,x,w) => {
  if (x===undefined) return x;
  if (typeof f !== "function") return f;
  if (f.m) throw Error("Runtime: Cannot call modifier as function");
  return f(x, w);
}

let get = x => x.e ? x.e[x.p] : arr(x.map(c=>get(c)), x.sh);
let set = (d, id, v) => {
  let eq = (a,b) => a.length===b.length && a.every((e,i)=>e===b[i]);
  if (id.e) {
    if (!d && id.e[id.p]===null) throw Error("↩: Variable modified before definition");
    id.e[id.p] = v;
  } else {
    if (!v.sh) throw Error("← or ↩: Multiple targets but atomic value");
    if (!eq(id.sh,v.sh)) throw Error("← or ↩: Target and value shapes don't match");
    id.map((n,j)=>set(d,n,v[j]));
  }
  return v;
}

let chkM = (v,m) => { if (m.m!==v) throw Error("Runtime: Only a "+v+"-modifier can be called as a "+v+"-modifier"); }
let chkR = v => { if (v===null) throw Error("Runtime: Variable referenced before definition"); }
let genjs = (B, p) => { // Bytecode -> Javascript compiler
  let rD = 0;
  let r = "";
  let szM = 1;
  let rV = n => { szM=Math.max(szM,n+1); return 'v'+n; };
  let rP = val => rV(rD++) + "="+val+";";
  let rG = () => rV(--rD);
  let num = () => {
    let b=128,n=B[p++];
    if (n<b) return n;
    let i=1, t=0;
    do { t+=i*(n-b); i*=b; n=B[p++]; } while (n>=b);
    return t+i*n;
  }
  let ge = n => "e"+".p".repeat(n);
  loop: while(true) { r+="\n";
    if (p>B.length) throw Error("Internal compiler error: Unclosed function");
    switch(B[p++]) {
      case 0:          { r+= rP("O["+num()+"]");                                                                                           break; }
      case 3: case  4: { let n=num(); rD-= n;      r+=rP("list(["+(new Array(n).fill().map((_,i)=>rV(rD+i)).join(","))+"])");              break; }
      case 5: case 16: { let        f=rG(),x=rG(); r+=rP("call("+f+","+x      +")");                                                       break; }
      case 6: case 17: { let w=rG(),f=rG(),x=rG(); r+=rP("call("+f+","+x+","+w+")");                                                       break; }
      case 7:          { let f=rG(),m=rG();        r+="chkM(1,"+m+");"+rP(m+"("+f      +")");                                              break; }
      case 8:          { let f=rG(),m=rG(),g=rG(); r+="chkM(2,"+m+");"+rP(m+"("+f+","+g+")");                                              break; }
      case 9:          { let        g=rG(),h=rG(); r+=rP("((  g,h)=>(x,w)=>call(g,call(h,x,w))"+                  ")("      +g+","+h+")"); break; }
      case 10:case 19: { let f=rG(),g=rG(),h=rG(); r+=rP("((f,g,h)=>(x,w)=>call(g,call(h,x,w),has(f)?call(f,x,w):f))("+f+","+g+","+h+")"); break; }
      case 11:         { let i=rG(),       v=rG(); r+=rP("set(1,"+i+","+v                       +")");                                     break; }
      case 12:         { let i=rG(),       v=rG(); r+=rP("set(0,"+i+","+v                       +")");                                     break; }
      case 13:         { let i=rG(),f=rG(),x=rG(); r+=rP("set(0,"+i+",call("+f+","+x+",get("+i+")))");                                     break; }
      case 14:         { rD--;                                                                                                             break; }
      case 15:         { r+= rP("D["+num()+"](e)");                                                                                        break; }
      case 21:         { r+= rP(ge(num())+"["+num()+"]")+"chkR("+rV(rD-1)+");";                                                            break; }
      case 22:         { r+= rP("{e:"+ge(num())+",p:"+num()+"}");                                                                          break; }
      case 25:         { if(rD!==1) throw Error("Internal compiler error: Wrong stack size"); r+= "return v0;";                            break loop; }
    }
  }
  return "let "+new Array(szM).fill().map((_,i)=>rV(i)).join(',')+";"+r;
}
let run = (B,O,S) => { // Bytecode, Objects, Sections/blocks
  let D = S.map(([type,imm,pos,varam],i) => {
    let I = imm? 0 : 3; // Operand start
    let def = new Array(I + (type==0?0:type+1) + varam).fill(null);
    let c = genjs(B, pos);
    if (imm) c =               "const e=[...e2];e.p=oe;"+c;
    else c = "const fn=(x, w)=>{const e=[...e2];e.p=oe;e[0]=fn;e[1]=x;e[2]=w;"+c+"};return fn;";
    
    if (type===0) c = "let e2=def;"+c;
    if (type===1) c = "const mod=(f  ) => {let e2=[...def]; e2["+I+"]=mod;e2["+(I+1)+"]=f;"                +c+"}; mod.m=1;return mod;";
    if (type===2) c = "const mod=(f,g) => {let e2=[...def]; e2["+I+"]=mod;e2["+(I+1)+"]=f;e2["+(I+2)+"]=g;"+c+"}; mod.m=2;return mod;";
    return Function("'use strict'; return (chkM,chkR,has,call,get,set,list,O,def) => D => oe => {"+c+"};")()
                                          (chkM,chkR,has,call,get,set,list,O,def);
  });
  D.forEach((d,i) => {D[i]=d(D)});
  return D[0]([]);
}

// Runtime
let assertFn = pre => (x,w) => {
  if (x!==1) throw Error(pre + (has(w)?(pre?": ":"")+w.join(""):""));
  return x;
}
let arr = (r,sh) => {r.sh=sh;return r;}
let list = l => arr(l,[l.length]);
let str = s => list(Array.from(s));
let m1 = m => {m.m=1;return m;}
let m2 = m => {m.m=2;return m;}
let ctrans = (c,t) => String.fromCodePoint(c.codePointAt(0)+t);
let plus = (x,w) => {
  if (!has(w)) return x;
  let s=typeof w, t=typeof x;
  if (s==="number" && t==="number") return w+x;
  if (s==="number" && t==="string") return ctrans(x,w);
  if (s==="string" && t==="number") return ctrans(w,x);
  if (s==="string" && t==="string") throw Error("+: Cannot add two characters");
  throw Error("+: Cannot add non-data values");
}
let minus = (x,w) => {
  if (typeof x!=="number") {
    if (has(w)&&typeof w==="string") return w.codePointAt(0)-x.codePointAt(0);
    throw Error("-: Can only negate numbers");
  }
  if (!has(w)) return -x;
  let s=typeof w;
  if (s==="number") return w-x;
  if (s==="string") return ctrans(w,-x);
  throw Error("-: Cannot subtract from non-data value");
}
let lesseq = (x,w) => {
  let s=typeof w, t=typeof x;
  return +(s!==t ? s<=t : w<=x);
}
let table = m1(f => (x,w) => !has(w)
  ? arr(x.map(e=>call(f,e)),x.sh)
  : arr([].concat.apply([],w.map(d=>x.map(e=>call(f,e,d)))),w.sh.concat(x.sh)));
let scan = m1(f => (x,w) => {
  if (has(w)) throw Error("`: No dyadic form");
  let s=x.sh;
  if (!s||s.length===0) throw Error("`: 𝕩 must have rank at least 1");
  let l=x.length,r=Array(l);
  if (l>0) {
    let c=1;for(let i=1;i<s.length;i++)c*=s[i];
    let i=0;
    for(;i<c;i++) r[i]=x[i];
    for(;i<l;i++) r[i]=call(f,x[i],r[i-c]);
  }
  return arr(r,s);
});
let group_len = (x,w) => { // ≠¨⊔ for a valid list argument
  let l=x.reduce((a,b)=>Math.max(a,b),-1);
  let r=Array(l+1).fill(0);
  x.map(e=>{if(e>=0)r[e]+=1;});
  return list(r);
}
let group_ord = (x,w) => { // ∾⊔x assuming w=group_len(x)
  let l=0,s=w.map(n=>{let l0=l;l+=n;return l0;});
  let r=Array(l);
  x.map((e,i)=>{if(e>=0)r[s[e]++]=i;});
  return list(r);
}

let provide = [
  (x,w) => x.sh?1:0                                     // IsArray
 ,(x,w) => 0                                            // Type
 ,(x,w) => has(w)?Math.log(x)/Math.log(w):Math.log(x)   // Log  
 ,group_len                                             // GroupLen
 ,group_ord                                             // GroupOrd
 ,assertFn("")                                          // !
 ,plus                                                  // +
 ,minus                                                 // -
 ,(x,w) => w*x                                          // ×
 ,(x,w) => (has(w)?w:1)/x                               // ÷
 ,(x,w) => has(w)?Math.pow(w,x):Math.exp(x)             // ⋆
 ,(x,w) => Math.floor(x)                                // ⌊
 ,(x,w) => has(w)?+(x===w):x.sh?x.sh.length:0           // =
 ,lesseq                                                // ≤
 ,(x,w) => list(x.sh)                                   // ≢
 ,(x,w) => arr(x.slice(),has(w)?w:[x.length])           // ⥊
 ,(x,w) => x[w]                                         // ⊑
 ,(x,w) => list(Array(x).fill().map((_,i)=>i))          // ↕
 ,table                                                 // ⌜
 ,scan                                                  // `
 ,m2((f,g)=>(x,w)=>has(w)?call(g,x,w):call(f,x,w))      // ⊘
];

let runtime = run(
  new Uint8Array([15,1,22,0,0,11,14,15,2,22,0,1,11,14,15,3,0,20,15,4,8,22,0,2,11,14,15,5,22,0,3,11,14,15,6,22,0,4,11,14,15,7,22,0,5,11,14,15,8,22,0,6,11,14,15,9,22,0,7,11,14,15,10,22,0,8,11,14,15,11,22,0,9,11,14,0,12,21,0,7,0,11,8,0,21,3,2,21,0,0,0,0,8,22,0,10,11,14,0,12,21,0,7,0,11,8,0,8,0,13,21,0,7,0,21,8,19,0,21,3,2,21,0,0,0,0,8,22,0,11,11,14,21,0,4,0,13,7,22,0,12,11,14,21,0,12,0,7,0,22,19,0,20,15,12,8,22,0,13,11,14,0,13,0,7,0,22,19,22,0,14,11,14,15,13,0,16,21,0,14,19,0,20,0,11,8,22,0,15,11,14,15,14,0,16,21,0,13,19,0,20,0,7,21,0,5,21,0,15,21,0,5,0,7,8,8,8,22,0,16,11,14,0,7,21,0,1,3,2,21,0,0,0,13,21,0,7,0,21,8,8,22,0,17,11,14,0,22,0,14,0,16,0,21,19,3,2,21,0,0,0,12,21,0,13,0,21,19,8,22,0,18,11,14,15,15,22,0,19,11,14,21,0,19,22,0,20,11,14,0,0,0,7,0,22,19,21,0,9,21,0,13,8,22,0,21,11,14,0,14,21,0,8,15,16,8,22,0,22,11,14,15,17,22,0,23,11,14,15,18,22,0,24,11,14,15,19,22,0,25,11,14,0,13,0,7,21,0,12,19,22,0,26,11,14,0,22,0,15,0,16,0,21,19,21,0,8,0,13,0,8,0,23,19,0,7,0,22,19,15,20,3,2,21,0,0,21,0,1,21,0,5,0,0,8,8,8,3,2,21,0,0,21,0,1,21,0,5,0,14,8,21,0,20,0,8,7,0,22,19,21,0,13,0,21,19,8,22,0,27,11,14,21,0,26,21,0,27,21,0,4,21,0,27,7,0,7,9,3,2,21,0,0,21,0,2,21,0,5,0,0,8,8,15,21,3,3,21,0,0,0,0,21,0,6,0,6,8,8,22,0,28,11,14,15,22,22,0,29,11,14,15,23,22,0,30,11,14,0,12,21,0,13,0,21,19,21,0,9,15,24,8,22,0,31,11,14,0,12,21,0,13,0,21,19,21,0,9,15,25,8,22,0,32,11,14,15,26,15,27,3,2,21,0,0,21,0,1,21,0,5,0,12,8,0,12,0,22,19,8,22,0,33,11,14,21,0,33,22,0,34,11,14,15,28,22,0,35,11,14,15,29,22,0,36,11,14,15,30,22,0,37,11,14,15,31,22,0,38,11,14,15,32,22,0,39,11,14,15,33,22,0,40,11,14,15,34,22,0,41,11,14,15,35,22,0,42,11,14,0,0,21,0,6,0,12,8,0,21,3,2,21,0,1,21,0,5,0,0,8,0,12,3,2,0,12,21,0,6,0,12,8,0,21,3,2,0,14,21,0,6,21,0,42,0,12,7,8,21,0,20,0,8,7,0,22,19,0,21,3,2,15,36,3,5,21,0,20,15,37,7,16,22,0,43,11,14,0,21,15,38,3,2,21,0,0,0,0,8,22,0,44,11,14,21,0,43,0,20,21,0,44,8,22,0,45,11,14,21,0,43,0,7,0,22,19,0,20,3,0,0,14,3,2,21,0,0,0,0,8,8,22,0,46,11,14,0,0,21,0,9,0,15,21,0,5,21,0,18,8,21,0,13,0,21,19,21,0,9,15,39,8,8,22,0,47,11,14,15,40,21,0,9,15,41,15,42,3,2,21,0,0,0,22,0,18,0,12,0,12,0,22,19,7,21,0,20,0,8,7,0,22,19,0,7,0,22,19,3,2,21,0,0,0,12,0,12,0,22,19,8,8,8,22,0,48,11,14,15,43,22,0,49,11,14,21,0,49,0,54,21,0,17,21,0,8,0,12,8,0,7,0,22,19,15,44,3,3,7,22,0,50,11,14,21,0,49,0,55,0,12,21,0,7,0,21,8,0,7,0,22,19,15,45,3,3,7,22,0,51,11,14,15,46,22,0,52,11,14,15,47,22,0,53,11,14,21,0,25,0,9,7,22,0,54,11,14,21,0,25,0,10,7,22,0,55,11,14,21,0,4,21,0,54,21,0,8,21,0,55,8,7,0,20,0,23,21,0,54,16,21,0,8,21,0,55,8,8,22,0,56,11,14,21,0,25,15,48,0,20,21,0,17,8,7,22,0,57,11,14,21,0,25,15,49,0,20,21,0,15,8,7,22,0,58,11,14,21,0,25,15,50,0,20,0,7,21,0,5,21,0,58,21,0,5,0,7,8,8,8,7,22,0,59,11,14,21,0,25,0,8,7,0,20,21,0,39,0,21,7,8,22,0,60,11,14,21,0,25,0,8,0,7,0,6,19,7,0,20,21,0,39,0,22,7,8,22,0,61,11,14,21,0,25,0,8,0,20,21,0,14,0,7,21,0,13,19,21,0,7,0,21,8,8,7,22,0,62,11,14,21,0,25,21,0,12,0,7,0,22,19,7,0,20,15,51,8,22,0,63,11,14,21,0,25,0,13,0,7,0,22,19,7,0,20,21,0,47,8,22,0,64,11,14,21,0,25,0,12,0,7,0,22,19,7,0,20,21,0,18,8,22,0,65,11,14,21,0,25,0,12,7,0,20,0,12,8,22,0,66,11,14,21,0,25,21,0,12,7,0,20,21,0,3,0,21,7,0,5,0,59,19,8,22,0,67,11,14,21,0,25,0,13,7,0,20,21,0,3,0,21,7,0,5,0,60,19,8,22,0,68,11,14,21,0,25,0,6,7,22,0,69,11,14,21,0,25,0,7,7,22,0,70,11,14,21,0,70,21,0,69,0,22,19,22,0,71,11,14,21,0,69,0,21,3,2,21,0,70,0,21,3,2,21,0,62,0,22,3,2,21,0,54,0,22,3,2,21,0,55,0,22,3,2,21,0,56,0,22,3,2,21,0,60,0,22,3,2,21,0,61,0,21,3,2,21,0,71,0,22,3,2,21,0,57,0,21,3,2,21,0,58,0,29,3,2,21,0,59,0,28,3,2,21,0,63,0,21,3,2,21,0,68,0,22,3,2,21,0,66,0,22,3,2,21,0,67,0,22,3,2,21,0,64,0,21,3,2,21,0,65,0,21,3,2,3,18,21,0,20,15,52,7,21,0,4,0,21,7,0,5,0,61,19,3,1,0,16,0,21,17,17,22,0,72,11,14,15,53,0,15,3,2,21,0,0,0,0,8,22,0,73,11,14,15,54,22,0,74,11,14,0,15,0,20,21,0,73,8,22,0,75,11,14,15,55,22,0,76,11,14,15,56,0,20,15,57,8,22,0,77,11,14,21,0,77,21,0,5,21,0,64,8,22,0,78,11,14,15,58,22,0,79,11,14,15,59,22,0,80,11,14,21,0,80,22,0,81,11,14,15,60,22,0,82,11,14,21,0,82,22,0,83,11,14,15,61,22,0,84,11,14,21,0,84,22,0,85,11,14,21,0,75,21,0,6,21,0,23,8,15,62,3,2,21,0,0,21,0,66,21,0,63,0,22,19,21,0,6,21,0,61,8,8,22,0,86,11,14,21,0,50,0,20,21,0,37,8,22,0,87,11,14,21,0,51,0,20,21,0,38,8,22,0,88,11,14,21,0,34,21,0,7,21,0,30,8,22,0,89,11,14,21,0,65,21,0,66,0,21,19,21,0,70,0,22,19,21,0,53,15,63,15,64,3,2,21,0,0,21,0,2,21,0,5,0,0,8,8,8,22,0,90,11,14,0,22,21,0,53,21,0,40,8,21,0,7,21,0,21,8,0,20,21,0,33,21,0,7,0,21,21,0,63,16,8,8,22,0,91,11,14,15,65,22,0,92,11,14,21,0,92,0,20,21,0,76,8,22,0,93,11,14,0,21,21,0,53,21,0,36,8,0,20,21,0,35,8,22,0,94,11,14,21,0,90,0,20,21,0,30,8,22,0,95,11,14,15,66,22,0,96,11,14,15,67,22,0,97,11,14,15,68,22,0,98,11,14,21,0,86,0,20,21,0,48,8,22,0,99,11,14,21,0,98,0,20,21,0,97,8,22,0,100,11,14,15,69,22,0,101,11,14,21,0,101,15,70,3,2,21,0,0,21,0,2,21,0,5,21,0,75,21,0,5,0,18,0,0,7,8,8,21,0,20,21,0,61,7,9,8,22,0,102,11,14,21,0,102,21,0,7,21,0,75,21,0,1,3,2,21,0,0,0,0,8,8,22,0,103,11,14,15,71,22,0,104,11,14,15,72,22,0,105,11,14,15,73,22,0,106,11,14,15,74,22,0,107,11,14,21,0,107,21,0,28,7,0,20,0,21,21,0,29,21,0,28,8,8,22,0,108,11,14,21,0,107,21,0,4,21,0,28,7,7,0,20,0,22,21,0,29,21,0,4,21,0,28,7,8,8,22,0,109,11,14,15,75,22,0,110,11,14,0,4,21,0,7,21,0,42,0,22,7,8,22,0,111,11,14,15,76,22,0,112,11,14,21,0,112,21,0,1,21,0,5,0,19,21,0,69,7,8,21,0,4,21,0,70,7,0,22,19,21,0,4,21,0,91,7,21,0,4,21,0,95,21,0,5,21,0,108,21,0,5,21,0,111,8,8,7,19,7,22,0,113,11,14,15,77,22,0,114,11,14,21,0,110,0,22,7,0,20,21,0,113,8,22,0,115,11,14,21,0,4,21,0,110,0,21,7,7,0,20,21,0,112,21,0,1,7,8,22,0,116,11,14,21,0,114,0,20,21,0,95,21,0,7,21,0,116,8,8,22,0,117,11,14,15,78,22,0,118,11,14,15,79,22,0,119,11,14,15,80,22,0,120,11,14,15,81,22,0,121,11,14,21,0,120,0,20,21,0,31,8,22,0,122,11,14,21,0,108,21,0,5,21,0,108,8,21,0,91,21,0,70,21,0,1,19,21,0,4,21,0,115,7,19,22,0,123,11,14,15,82,22,0,124,11,14,21,0,124,0,20,21,0,123,8,22,0,125,11,14,21,0,103,0,20,21,0,75,0,16,0,21,19,8,22,0,126,11,14,15,83,22,0,127,11,14,0,5,21,0,7,0,99,8,22,0,128,1,11,14,0,5,21,0,7,0,100,8,22,0,129,1,11,14,15,84,22,0,130,1,11,14,15,85,22,0,131,1,11,14,15,86,22,0,132,1,11,14,21,0,69,21,0,4,21,0,70,7,0,20,21,0,69,8,21,0,70,21,0,70,21,0,62,21,0,4,21,0,54,7,0,20,21,0,1,8,21,0,54,21,0,54,21,0,55,21,0,25,0,2,7,21,0,56,21,0,4,21,0,55,7,0,20,21,0,4,21,0,62,7,8,21,0,60,21,0,4,21,0,54,7,0,20,21,0,60,21,0,130,1,21,0,1,8,8,21,0,61,21,0,2,21,0,70,0,22,19,21,0,54,21,0,4,21,0,70,7,19,0,20,21,0,61,21,0,130,1,21,0,1,8,8,21,0,71,21,0,71,21,0,63,0,21,21,0,5,21,0,128,1,8,0,20,15,87,8,21,0,1,21,0,1,21,0,2,21,0,45,21,0,5,21,0,129,1,8,21,0,2,21,0,1,19,0,20,21,0,1,8,21,0,99,15,88,0,20,0,21,21,0,5,21,0,128,1,8,8,21,0,78,15,89,0,20,15,90,8,21,0,87,0,21,21,0,5,21,0,128,1,8,0,20,21,0,87,21,0,130,1,21,0,126,21,0,7,0,27,8,8,8,21,0,88,0,21,21,0,5,21,0,128,1,8,0,20,21,0,88,21,0,130,1,21,0,126,8,8,21,0,93,0,21,21,0,5,21,0,128,1,8,0,20,21,0,93,21,0,130,1,21,0,46,8,8,21,0,94,21,0,94,21,0,7,21,0,70,8,0,20,21,0,94,8,21,0,122,21,0,121,0,20,21,0,32,8,21,0,95,0,21,21,0,5,21,0,128,1,8,0,20,15,91,8,21,0,100,21,0,132,1,0,20,21,0,131,1,8,3,42,21,0,75,21,0,7,21,0,65,21,0,4,21,0,54,7,0,23,19,21,0,4,21,0,99,7,0,23,19,8,16,21,0,122,16,15,92,16,22,0,133,1,11,14,15,93,22,0,134,1,11,14,15,94,22,0,135,1,11,14,21,0,135,1,22,0,136,1,11,14,21,0,63,21,0,115,21,0,5,21,0,126,8,21,0,5,21,0,58,21,0,94,21,0,87,3,4,19,22,0,137,1,11,14,21,0,74,0,20,21,0,73,8,22,0,138,1,11,14,15,95,22,0,139,1,11,14,21,0,41,22,0,140,1,11,14,21,0,69,21,0,70,21,0,62,21,0,54,21,0,55,21,0,56,21,0,58,21,0,59,21,0,57,21,0,71,21,0,60,21,0,61,21,0,63,21,0,64,21,0,65,21,0,66,21,0,68,21,0,67,21,0,45,21,0,46,21,0,2,21,0,1,21,0,138,1,21,0,99,21,0,78,21,0,87,21,0,88,21,0,93,21,0,94,21,0,122,21,0,95,21,0,108,21,0,109,21,0,91,21,0,126,21,0,115,21,0,125,21,0,116,21,0,117,21,0,100,0,5,21,0,3,21,0,4,21,0,52,21,0,42,21,0,139,1,21,0,134,1,21,0,20,21,0,85,0,19,21,0,5,21,0,6,21,0,7,21,0,8,21,0,140,1,0,20,21,0,127,21,0,83,21,0,81,21,0,136,1,3,60,25,21,0,1,15,96,21,0,5,0,16,21,0,1,21,0,4,21,0,2,17,17,7,21,0,2,17,25,21,0,1,25,21,0,2,25,21,0,1,25,21,0,1,14,21,0,4,25,21,0,1,21,1,2,21,0,2,17,21,0,4,21,0,1,17,25,21,0,1,21,0,5,21,0,2,17,21,0,4,16,25,21,0,1,21,0,5,16,21,0,4,21,0,2,21,0,5,16,17,25,21,0,1,21,0,5,21,0,1,21,1,2,21,0,2,17,21,0,4,16,17,25,21,0,1,21,0,5,16,21,0,4,21,0,1,21,1,2,21,0,2,17,17,25,21,0,1,15,97,21,1,1,21,0,4,3,2,0,16,21,0,1,21,0,5,21,0,2,17,17,7,21,0,2,17,25,21,0,1,3,1,0,15,3,0,17,25,21,0,2,21,0,1,3,2,25,21,0,2,21,0,1,3,2,25,21,0,1,0,12,16,0,12,0,22,17,0,5,0,31,17,14,21,0,1,22,0,5,11,21,1,18,16,22,0,6,11,14,21,0,4,22,0,7,11,14,21,0,1,21,1,2,0,20,15,98,15,99,3,2,21,1,0,21,0,6,21,1,13,0,21,17,8,8,21,0,2,17,22,0,8,11,14,21,0,6,0,17,16,0,18,0,7,21,1,7,0,22,0,7,21,0,6,17,8,7,16,0,18,15,100,7,16,14,21,0,8,25,21,0,2,0,7,21,0,1,21,1,18,16,17,0,17,16,0,18,21,1,3,21,0,1,7,0,16,0,6,21,1,7,21,0,2,8,19,7,16,25,21,0,2,21,1,18,16,22,0,3,11,14,21,0,1,21,1,18,16,0,6,21,0,3,17,0,17,16,0,18,21,0,2,21,1,8,0,16,8,21,1,4,21,0,1,7,0,16,21,0,3,21,1,8,0,7,8,19,3,2,21,1,0,0,13,21,1,7,21,0,3,8,8,7,16,25,15,101,22,0,2,11,14,15,102,22,0,3,11,14,21,0,3,21,0,1,7,21,1,4,21,0,3,21,1,4,21,0,1,7,7,7,3,2,21,1,0,0,12,21,1,6,21,1,14,8,8,21,0,2,21,0,1,7,3,2,21,1,0,0,12,21,1,6,0,12,8,8,25,15,103,21,0,1,7,22,0,2,11,14,21,0,1,15,104,15,105,3,2,21,1,0,0,0,21,1,6,21,1,14,8,8,0,20,0,18,21,0,2,7,8,21,1,24,21,0,2,7,3,3,21,1,0,0,0,21,1,6,0,6,8,8,25,21,0,1,21,1,27,21,0,2,17,25,21,0,1,0,14,21,1,6,21,1,104,8,21,0,2,17,22,0,3,11,14,21,0,3,21,1,20,21,1,105,21,0,1,0,15,16,21,1,8,0,16,8,21,1,8,21,1,28,21,1,7,21,0,2,0,15,16,21,1,8,0,16,8,8,8,7,7,16,22,0,4,11,14,0,21,21,1,4,21,0,4,7,16,25,21,0,1,0,12,16,0,13,0,22,17,0,5,0,34,17,14,21,0,1,21,1,18,16,22,0,6,11,14,21,0,1,21,1,22,0,22,17,21,1,20,0,8,7,0,22,17,22,0,7,11,14,21,0,1,0,15,16,22,0,8,11,14,0,21,22,0,9,11,22,0,10,11,14,21,0,8,0,21,0,18,21,1,10,7,21,1,20,0,8,7,0,22,19,3,2,21,1,0,21,0,6,21,1,13,0,24,17,0,8,0,22,0,12,21,0,7,17,17,8,16,21,1,1,21,1,9,21,0,1,21,1,8,15,106,8,8,16,0,7,0,22,17,22,0,11,11,14,21,0,1,0,18,21,0,10,21,1,8,0,7,8,0,7,21,1,7,21,0,9,8,3,2,0,16,21,0,5,17,7,0,4,21,1,7,0,3,8,9,15,107,21,0,4,7,3,2,21,1,0,21,0,11,8,16,25,21,0,1,0,12,16,0,12,0,22,17,0,5,0,35,17,14,21,0,1,21,1,18,16,22,0,3,11,14,21,0,1,21,0,3,21,1,13,0,21,17,21,1,9,15,108,8,16,25,21,0,1,21,1,18,16,22,0,3,11,14,21,0,1,21,1,22,0,22,17,22,0,4,11,21,1,20,0,8,7,0,22,17,22,0,5,11,14,21,0,3,0,17,16,0,18,21,1,3,21,0,1,0,15,16,7,0,16,0,8,21,1,7,21,0,5,8,21,1,8,0,6,8,19,7,21,0,5,0,17,16,0,15,21,0,4,17,17,25,21,0,1,0,12,16,21,1,4,0,7,7,0,22,17,22,0,3,11,14,21,0,1,0,14,16,22,0,4,11,14,21,0,4,0,16,21,0,3,17,22,0,5,11,14,21,0,3,0,17,16,0,18,21,0,4,21,1,8,0,16,8,7,16,22,0,6,11,14,21,0,6,21,1,20,0,8,7,0,22,17,0,17,16,0,15,21,0,6,17,0,18,21,1,3,21,0,1,0,15,16,7,0,16,0,8,21,1,7,21,0,5,8,21,1,8,0,6,8,19,7,21,0,5,0,17,16,17,25,21,0,1,21,1,22,0,22,17,22,0,3,11,21,1,20,0,8,7,0,22,17,22,0,4,11,14,21,0,4,0,17,16,0,15,21,0,3,17,0,18,0,6,21,1,7,0,8,21,1,7,21,0,4,8,8,21,1,4,0,16,7,21,0,1,0,15,16,19,7,21,0,2,17,25,21,0,2,0,18,21,0,1,21,1,8,0,16,8,7,16,25,21,0,1,0,12,16,0,13,0,22,17,0,5,0,37,17,14,21,0,1,21,1,18,16,22,0,3,11,14,21,0,1,21,1,34,21,0,3,0,17,16,0,18,0,7,21,1,7,0,22,0,7,21,0,3,17,8,7,16,17,25,21,0,2,21,1,10,16,0,5,0,38,17,14,21,0,1,21,1,18,16,22,0,3,11,14,21,0,3,0,9,21,0,2,17,21,1,15,16,0,8,21,0,3,17,0,7,22,0,2,13,14,21,0,1,21,1,34,21,0,3,0,17,16,0,18,21,1,1,0,13,21,0,2,0,7,21,0,3,17,19,0,8,21,0,3,19,0,7,21,1,1,19,0,6,21,0,2,19,7,16,17,25,21,0,1,0,12,16,0,13,0,22,17,0,5,0,39,17,14,21,0,1,21,1,18,16,0,6,0,22,17,0,17,16,0,18,21,0,1,21,1,8,21,1,34,21,1,7,0,17,8,8,7,16,25,21,0,1,0,12,16,0,13,0,22,17,0,5,0,40,17,14,21,0,1,21,1,18,16,22,0,3,11,14,21,0,3,0,6,0,22,17,0,17,16,0,18,21,0,1,21,1,8,21,1,34,21,1,7,15,109,8,8,7,16,25,21,1,34,21,1,7,21,0,1,21,1,29,21,1,28,21,1,4,21,1,28,7,3,2,0,16,21,0,1,17,8,8,25,21,0,2,0,0,16,0,5,0,41,17,14,21,0,2,0,18,21,1,10,7,16,0,15,16,21,1,20,0,8,7,0,22,17,0,5,0,42,17,14,21,0,1,21,1,18,16,22,0,3,11,14,21,0,2,0,18,21,1,14,21,1,7,21,0,3,8,0,8,0,13,21,1,7,21,0,3,0,7,16,8,19,7,16,0,15,16,21,1,20,0,8,7,0,22,17,0,5,0,43,17,14,21,0,1,21,1,34,21,1,7,0,18,21,1,1,21,1,14,0,21,19,0,8,21,0,3,19,0,6,21,1,1,19,7,8,21,0,2,17,25,21,0,1,0,14,16,22,0,6,11,21,1,20,0,8,7,0,22,17,22,0,7,11,0,17,16,22,0,8,11,14,21,0,1,21,0,5,21,1,6,21,0,4,8,21,0,2,17,22,0,9,11,14,21,0,8,0,15,21,0,6,17,21,0,5,16,22,0,10,11,14,15,110,0,15,3,2,0,16,21,0,10,0,0,16,17,22,0,11,11,14,21,0,9,21,0,11,16,22,0,9,12,14,21,0,10,21,0,11,16,22,0,10,12,14,21,0,10,0,21,21,1,29,21,1,26,8,16,22,0,12,11,14,21,1,4,21,0,10,7,0,16,21,0,12,21,1,8,0,16,8,19,21,0,7,3,2,21,1,0,0,13,21,1,7,21,0,12,21,1,18,16,8,8,22,0,13,11,14,0,21,22,0,14,11,21,0,13,16,22,0,15,11,14,21,0,8,0,18,21,0,1,0,15,16,21,1,8,0,16,8,15,111,3,2,21,1,0,15,112,8,7,16,0,15,21,0,6,17,25,21,1,21,21,1,6,21,1,24,21,0,1,7,0,20,0,18,21,0,1,7,8,8,25,21,0,1,21,1,42,21,1,43,7,21,0,2,17,0,15,16,21,1,20,0,8,7,0,22,17,25,21,0,2,0,16,0,22,17,21,0,1,3,2,21,1,0,21,0,2,0,16,0,21,17,8,25,21,0,1,0,15,16,0,18,21,1,44,7,16,21,1,20,0,7,0,8,0,13,19,0,7,21,1,2,19,7,0,21,17,0,6,0,22,17,25,21,0,1,0,15,16,0,16,0,21,17,21,1,46,16,22,0,3,11,14,21,0,1,0,15,16,0,18,21,1,46,21,1,45,21,0,3,19,7,16,21,1,20,0,8,7,0,22,17,0,5,0,44,17,14,21,0,3,21,1,20,0,8,7,0,22,17,0,17,16,0,15,21,0,3,17,0,18,21,1,4,21,1,73,21,1,8,0,16,8,7,7,21,0,1,17,25,21,0,1,0,0,16,0,5,0,49,17,14,21,0,1,0,15,16,21,1,18,16,21,1,13,0,21,17,25,0,27,22,0,3,11,22,0,4,11,14,3,0,22,0,5,11,14,21,0,1,22,0,6,11,14,21,0,1,0,18,21,1,18,7,16,21,1,30,16,0,18,15,113,7,16,25,21,0,1,0,15,16,22,0,3,11,21,1,18,16,22,0,4,11,14,21,0,3,0,18,21,1,46,7,16,22,0,5,11,14,21,0,5,0,16,0,21,17,21,1,18,16,22,0,6,11,14,21,0,1,0,12,16,22,0,7,11,14,21,0,5,0,18,21,1,18,0,12,21,0,6,19,7,16,21,1,20,0,8,7,0,22,17,0,5,0,45,17,14,21,0,7,21,1,12,21,0,6,17,0,5,0,46,17,14,15,114,22,0,8,11,14,21,0,1,21,1,46,16,22,0,9,11,14,0,22,22,0,10,11,14,0,21,21,1,13,16,22,0,11,11,22,0,12,11,14,21,0,7,0,17,16,21,1,42,15,115,7,21,0,9,21,1,35,16,21,0,8,0,8,7,0,22,17,21,1,35,16,17,14,21,1,42,15,116,21,0,3,0,18,0,15,7,16,7,7,22,0,13,11,14,21,0,11,21,0,13,15,117,3,2,21,1,0,21,0,6,21,1,13,21,0,7,17,8,21,0,12,17,25,21,0,1,22,0,2,22,0,3,22,0,4,4,3,11,14,0,51,21,1,23,21,0,2,17,21,1,23,0,50,17,22,0,5,11,14,0,52,22,0,6,11,14,0,53,22,0,7,11,14,15,118,25,21,0,1,21,1,17,16,22,0,5,11,21,1,13,21,1,7,21,0,2,8,21,1,9,21,0,4,8,16,14,21,0,5,0,17,16,0,18,21,0,1,0,6,21,0,2,17,21,1,8,0,6,8,7,0,18,0,21,21,1,8,21,1,13,8,21,1,9,0,28,8,7,9,0,18,0,13,21,1,7,21,0,2,8,21,1,9,0,28,8,7,3,2,21,1,0,21,0,1,21,1,13,0,21,17,8,16,25,21,0,1,14,0,6,21,1,16,0,21,19,0,17,9,0,7,21,1,16,0,21,19,0,17,9,0,18,0,6,7,21,1,1,21,1,5,21,1,13,8,19,3,2,21,1,0,21,1,13,21,1,7,0,21,8,8,25,0,27,21,1,82,21,0,1,8,25,21,0,1,22,0,3,11,14,15,119,15,120,3,2,21,1,0,21,1,2,21,1,5,21,1,45,21,1,13,21,0,2,19,8,8,25,21,0,2,21,1,54,21,0,1,17,21,1,15,16,0,8,21,0,2,17,0,7,21,0,1,17,25,21,0,2,21,0,1,3,2,0,16,21,0,1,21,1,14,21,0,2,17,17,25,21,0,2,21,0,1,3,2,0,16,21,0,1,21,1,13,21,0,2,17,17,25,21,0,1,3,1,0,15,3,0,17,25,21,0,1,21,0,2,0,16,0,22,17,3,2,21,1,0,15,121,21,0,2,0,16,0,21,17,7,8,25,21,0,1,3,1,25,21,0,2,21,1,66,16,21,1,67,0,22,17,0,5,0,62,17,14,21,0,2,21,1,73,16,22,0,3,11,14,21,0,3,0,18,21,1,11,7,16,21,1,71,16,22,0,4,11,21,1,20,21,1,69,7,16,22,0,5,11,14,21,0,5,21,1,67,0,22,17,0,5,0,63,17,14,21,0,1,21,1,73,16,22,0,6,11,21,1,65,16,22,0,7,11,14,21,0,3,21,1,20,21,1,62,7,15,122,3,2,21,1,0,21,0,5,8,16,22,0,8,11,14,21,0,6,21,0,7,21,1,65,21,0,8,17,21,1,9,15,123,8,16,0,15,21,0,3,17,25,15,124,22,0,3,11,14,15,125,22,0,4,11,14,21,0,1,21,0,3,21,0,4,3,2,21,1,0,0,0,8,16,25,21,0,2,21,0,1,3,2,25,21,0,1,3,1,25,21,0,1,21,1,5,21,1,75,8,21,1,1,21,1,5,21,1,63,8,21,1,42,0,16,7,21,1,65,21,1,8,21,1,4,21,1,57,21,1,69,0,22,19,21,1,70,21,1,2,19,7,8,19,0,22,0,21,3,2,0,20,0,23,3,1,8,19,25,21,0,1,21,1,79,21,0,5,7,21,0,2,17,22,0,6,11,21,1,64,0,21,17,22,0,7,11,14,21,0,4,22,0,8,11,14,15,126,22,0,9,11,14,21,0,1,21,0,9,21,0,6,7,21,0,2,17,25,21,0,1,21,1,79,21,0,5,7,21,1,42,21,1,70,21,1,8,21,1,58,8,21,1,70,21,1,59,0,21,19,3,2,21,1,0,21,1,1,21,1,68,0,21,19,8,7,21,1,66,21,1,6,21,1,77,8,19,21,0,2,17,22,0,6,11,14,15,127,22,0,7,11,14,21,1,1,21,1,63,9,21,0,7,21,1,1,0,18,21,1,63,7,9,3,3,21,1,0,21,1,66,21,1,8,21,1,67,8,21,1,69,0,22,19,21,1,62,0,21,21,1,8,21,1,64,8,19,8,22,0,7,12,14,21,0,1,21,0,7,21,0,6,0,16,21,1,7,21,1,65,21,1,4,21,1,70,7,0,22,19,8,16,17,21,1,42,21,0,4,7,21,0,2,21,0,7,21,0,6,0,16,0,21,17,17,17,21,1,64,16,25,21,0,1,21,1,66,16,21,1,68,0,22,17,0,5,0,69,17,14,21,0,1,21,1,52,21,1,63,7,16,21,1,20,21,0,4,7,21,0,2,17,25,21,0,1,21,1,46,21,1,6,21,1,77,8,21,0,2,17,22,0,3,11,14,21,0,3,0,18,21,1,65,7,16,22,0,4,11,21,1,20,21,1,59,7,0,22,17,22,0,5,11,14,21,0,4,21,1,70,21,0,5,17,21,1,67,0,22,17,21,1,20,21,1,60,7,16,0,5,0,70,17,14,21,0,3,21,1,42,21,1,34,21,1,7,0,22,21,1,70,21,0,5,17,0,17,16,21,1,8,21,1,69,8,8,7,21,0,5,21,1,71,21,0,4,17,17,22,0,6,11,14,21,0,6,21,1,20,21,1,45,7,16,0,5,0,71,17,14,21,0,3,21,1,42,0,22,21,1,1,0,16,0,21,19,3,2,21,1,0,21,1,2,8,7,21,0,4,21,1,66,21,0,5,17,17,21,1,20,21,1,69,7,16,22,0,7,11,14,21,0,1,21,1,75,21,1,6,21,1,23,8,21,0,2,17,21,1,75,21,0,6,0,16,0,21,17,21,1,23,21,0,7,3,1,17,17,25,21,0,2,21,1,11,16,0,5,0,36,17,14,21,0,2,22,0,3,11,22,0,4,11,14,21,0,1,21,1,34,21,0,1,21,1,65,16,21,1,62,21,0,3,17,0,17,16,0,19,21,1,4,15,128,1,21,1,9,15,129,1,8,7,7,16,17,25,21,0,1,21,1,65,21,1,6,21,1,66,8,21,0,2,17,0,5,0,72,17,14,21,0,1,21,1,89,21,0,2,17,25,21,0,1,0,0,16,0,5,0,73,17,14,21,0,2,21,1,66,16,21,1,67,0,22,17,0,5,0,74,17,14,21,0,1,21,1,46,16,21,1,65,21,1,6,21,1,68,8,21,0,2,17,0,5,0,75,17,14,21,0,2,21,1,75,16,0,18,21,1,11,7,16,21,1,20,21,1,60,7,16,0,5,0,76,17,14,21,0,1,21,1,46,16,21,1,87,21,0,2,21,1,65,16,17,22,0,3,11,14,21,0,3,21,1,69,0,22,17,21,1,68,21,0,2,17,21,1,20,21,1,60,7,16,0,5,0,77,17,14,21,0,1,21,0,2,21,1,65,16,21,1,63,0,21,17,21,1,9,15,130,1,8,21,0,2,17,25,21,0,1,0,18,21,1,10,7,16,21,1,20,21,1,60,7,16,0,5,0,78,17,14,21,0,1,21,1,68,0,27,17,21,1,20,21,1,60,7,16,0,5,0,79,17,14,21,0,1,0,4,21,0,1,0,3,16,22,0,5,11,17,22,0,6,11,14,0,21,22,0,7,11,14,21,0,5,0,18,21,1,93,21,1,5,0,18,15,131,1,7,8,21,0,4,9,7,16,25,21,0,1,21,1,66,16,21,1,66,0,22,17,0,5,0,80,17,14,21,1,96,21,1,1,7,22,0,3,11,14,21,0,1,21,0,3,0,18,15,132,1,7,21,1,20,0,18,0,18,21,1,23,7,7,7,3,0,21,1,63,16,21,1,63,16,19,3,2,21,1,0,21,1,45,21,1,63,0,22,19,8,16,25,21,0,1,0,0,16,0,5,0,81,17,14,21,0,2,21,1,45,21,1,64,0,23,19,21,1,9,21,1,21,21,1,5,21,1,77,8,8,16,22,0,2,12,14,21,0,2,21,1,66,16,21,1,66,0,22,17,0,5,0,82,17,14,21,0,2,0,18,21,1,66,7,16,21,1,20,21,1,69,7,16,22,0,3,11,14,21,0,1,21,1,66,16,21,1,68,21,0,3,17,0,5,0,83,17,14,21,0,1,21,1,46,16,21,1,87,21,0,3,17,21,1,66,21,0,2,0,18,21,1,46,7,16,21,1,48,16,17,21,1,20,21,1,60,7,16,0,5,0,84,17,14,21,0,2,0,18,21,1,75,7,16,22,0,2,12,0,18,21,1,65,7,16,22,0,4,11,14,21,0,1,21,1,22,21,0,3,17,21,1,23,21,0,4,21,1,20,21,1,62,7,16,3,1,17,21,1,4,21,1,75,7,21,0,1,17,21,1,8,21,1,91,8,22,0,5,11,14,21,0,2,0,16,21,1,7,0,21,8,21,1,96,21,0,5,7,9,0,18,21,1,96,21,1,1,7,7,21,1,62,21,0,4,21,1,88,0,22,17,21,1,94,16,21,1,23,0,22,3,1,17,0,19,21,1,62,7,16,21,1,94,16,19,21,1,20,0,18,0,18,21,1,69,7,7,7,9,0,18,21,0,5,7,9,3,2,21,1,0,21,1,65,21,1,65,0,22,19,8,16,25,21,0,2,21,1,66,16,21,1,66,0,22,17,0,5,0,85,17,14,21,0,1,21,1,46,16,22,0,3,11,21,1,65,21,1,6,21,1,66,8,21,0,2,17,0,5,0,86,17,14,21,0,2,0,18,21,1,10,7,16,21,1,20,21,1,60,7,16,0,5,0,87,17,14,21,0,3,21,1,63,21,1,60,21,1,70,21,1,8,21,1,67,8,19,21,0,2,17,21,1,20,21,1,60,7,16,0,5,0,88,17,14,0,21,21,1,63,21,0,2,17,21,1,62,21,0,3,17,21,1,69,21,0,2,17,22,0,2,12,14,21,0,2,21,1,65,16,21,1,71,21,1,7,21,1,93,8,16,21,1,70,16,21,1,20,21,1,1,21,1,62,21,0,3,21,1,8,0,16,8,19,21,1,69,21,0,2,21,1,8,0,16,8,19,7,0,21,17,21,1,4,0,16,7,21,0,1,21,1,75,16,17,25,21,0,2,0,18,21,0,1,21,1,8,21,1,102,8,7,16,25,21,0,1,21,1,66,21,1,7,0,21,8,21,1,20,21,1,61,7,9,21,1,6,21,1,4,21,1,70,7,8,21,0,2,17,22,0,3,11,14,21,0,1,0,21,21,0,3,3,2,15,133,1,3,2,21,1,0,0,21,21,1,66,21,0,3,17,8,21,0,2,17,25,21,0,4,22,0,5,11,14,21,0,2,22,0,6,11,14,21,0,1,22,0,7,11,14,15,134,1,22,0,8,11,14,21,0,4,21,1,66,21,1,7,0,21,8,21,1,9,21,0,1,8,9,21,0,8,3,2,0,16,21,0,6,21,1,65,0,22,17,17,25,21,0,1,22,0,2,11,14,21,1,63,21,1,7,0,21,8,21,1,9,15,135,1,8,25,21,0,2,21,1,66,16,21,1,4,21,1,70,7,0,22,17,22,0,5,11,14,21,0,5,21,1,68,0,21,17,0,5,0,89,17,14,21,0,1,21,1,66,16,21,1,68,21,0,5,17,0,5,0,90,17,14,21,0,2,21,1,22,0,22,17,22,0,6,11,21,1,20,21,1,62,7,16,22,0,7,11,14,0,21,21,1,105,21,0,2,21,1,75,16,21,1,8,0,16,8,21,1,6,21,0,4,8,7,21,0,7,17,22,0,8,11,14,21,0,2,21,1,65,16,0,22,0,22,21,1,8,21,1,70,21,1,5,21,1,93,8,8,21,1,62,21,0,7,19,0,18,21,1,69,21,1,7,21,0,7,8,21,1,8,21,0,8,8,7,9,21,1,4,21,1,68,7,0,21,19,21,1,20,21,1,60,7,9,3,2,21,1,0,21,1,63,21,1,7,0,21,8,8,16,0,5,0,91,17,14,21,0,1,21,1,66,16,21,1,4,21,1,70,7,21,0,5,17,22,0,9,11,14,21,0,1,21,1,22,21,0,9,17,22,0,10,11,14,21,0,10,21,1,104,21,0,6,17,22,0,11,11,14,21,0,11,21,1,20,21,1,105,21,0,1,21,1,75,16,21,1,8,0,16,8,21,1,8,21,0,4,21,1,7,21,0,2,21,1,75,16,21,1,8,0,16,8,8,8,7,7,16,22,0,12,11,14,21,1,4,0,21,7,21,1,68,21,0,12,21,1,7,21,1,62,21,1,7,21,0,6,21,1,20,21,1,62,7,16,8,8,19,22,0,13,11,14,21,0,9,21,1,93,16,0,18,21,0,1,21,1,46,16,21,1,8,0,16,8,7,16,21,1,20,21,1,62,7,21,1,93,9,21,1,8,21,1,75,8,16,21,1,62,21,0,10,21,1,20,21,1,62,7,16,17,0,18,15,136,1,21,1,7,21,0,2,21,1,65,16,8,7,16,25,21,0,1,22,0,2,11,14,21,1,85,21,1,60,7,21,1,71,9,0,19,21,1,60,7,21,1,85,21,1,69,7,9,3,2,0,16,21,0,1,17,22,0,3,11,14,15,137,1,25,21,0,1,21,1,66,16,21,1,68,0,22,17,0,5,0,93,17,14,21,0,1,21,1,108,16,22,0,5,11,14,21,0,1,21,1,65,16,21,1,93,16,0,18,0,22,21,1,1,21,0,1,21,1,66,21,1,63,0,22,19,21,1,9,21,1,52,21,1,63,7,8,16,21,1,91,21,0,5,17,21,1,8,0,16,8,21,1,6,21,1,46,8,0,22,21,1,8,21,1,70,8,19,3,2,21,1,0,21,1,63,21,1,7,0,21,8,8,7,16,21,0,4,21,0,5,17,21,1,91,21,0,5,21,1,111,16,17,25,21,0,2,21,1,66,16,22,0,3,11,14,21,0,1,21,1,66,16,21,1,68,21,0,3,17,0,5,0,94,17,14,21,0,1,21,0,3,21,1,83,21,1,93,8,21,0,2,21,1,46,16,17,21,0,3,21,1,83,21,1,45,8,21,0,2,17,25,21,0,2,21,1,66,16,21,1,67,0,22,17,0,5,0,95,17,14,21,0,1,21,1,46,16,21,1,65,21,1,6,21,1,68,8,21,0,2,17,0,5,0,96,17,14,21,0,2,21,1,75,16,0,18,21,1,11,7,16,21,1,20,21,1,60,7,16,0,5,0,97,17,25,21,0,1,21,1,46,16,21,1,100,21,0,2,17,0,18,21,1,20,21,1,58,7,7,16,21,1,93,16,0,18,21,1,3,21,0,1,7,21,1,103,21,1,91,21,1,7,21,0,2,8,19,7,16,25,21,0,1,21,1,118,21,0,2,17,14,21,0,2,21,1,75,16,22,0,2,12,14,21,0,2,21,1,116,16,21,1,71,16,21,1,20,21,1,69,7,16,21,1,70,21,0,1,21,1,66,16,17,22,0,3,11,14,21,0,3,21,1,63,21,0,2,17,21,1,20,21,1,60,7,16,0,5,0,98,17,14,21,0,1,21,1,119,21,0,3,21,1,93,16,21,1,1,21,1,95,21,1,4,21,1,116,21,1,5,21,1,71,8,7,19,21,0,2,17,21,1,99,21,0,2,17,17,25,21,0,1,21,1,118,21,0,2,17,14,21,0,2,21,1,75,16,22,0,2,12,14,21,0,1,21,1,66,16,22,0,3,11,14,21,0,2,21,0,3,21,1,8,21,1,63,8,21,1,60,21,1,116,19,16,21,1,20,21,1,60,7,16,21,1,128,1,16,14,21,0,1,21,1,119,21,0,3,21,1,93,16,21,1,1,21,1,95,21,1,4,21,1,116,21,1,5,21,1,71,8,7,19,21,0,2,17,21,1,99,21,0,2,17,21,1,111,16,17,25,21,0,1,21,1,115,21,1,7,21,0,2,8,21,1,123,21,1,8,21,1,52,21,1,78,7,8,9,21,1,6,21,1,115,8,21,0,2,17,25,21,0,1,15,138,1,21,0,5,21,1,126,21,0,1,21,0,4,21,0,2,17,17,7,21,0,2,17,25,21,0,1,21,0,4,21,0,2,17,22,0,6,11,14,21,0,6,21,0,5,21,0,2,17,21,1,45,21,0,1,17,21,1,129,1,16,14,21,0,6,25,21,0,1,21,1,66,16,21,1,66,0,22,17,21,1,128,1,16,14,21,0,1,21,1,99,16,22,0,3,11,14,21,0,3,0,18,21,1,11,7,16,21,1,20,21,1,60,7,16,21,1,128,1,16,14,21,0,3,0,3,16,22,0,4,11,14,0,22,21,1,68,21,0,4,17,21,1,20,21,1,60,7,16,21,1,129,1,16,14,21,0,4,21,1,71,16,21,1,95,16,22,0,5,11,14,21,0,5,21,1,42,0,27,7,16,21,1,99,21,0,1,21,1,42,21,1,65,7,16,21,1,95,16,17,21,1,91,21,0,5,21,1,99,21,0,3,17,21,1,108,16,17,25,21,0,2,21,1,66,16,21,1,66,0,22,17,21,1,128,1,16,14,21,0,2,0,18,21,1,11,7,16,21,1,20,21,1,60,7,16,21,1,128,1,16,14,21,0,1,21,1,99,21,1,6,21,1,91,21,1,7,21,1,108,8,8,21,0,2,21,1,100,16,17,25,21,0,1,0,0,16,21,1,129,1,16,14,21,0,1,21,1,66,16,21,1,66,0,21,17,21,1,129,1,16,14,21,0,1,21,1,126,16,25,21,0,2,21,1,66,21,1,6,21,1,70,8,21,0,1,17,22,0,3,11,14,21,0,3,0,22,21,1,8,21,1,68,8,21,1,60,21,1,68,21,1,7,0,21,8,19,16,21,1,129,1,16,14,21,0,2,0,22,21,1,65,3,2,21,1,127,21,0,3,8,16,22,0,4,11,14,21,0,1,21,1,65,16,21,1,68,21,0,4,17,21,1,129,1,16,14,21,0,1,21,1,91,21,1,87,21,1,7,21,0,4,8,3,2,21,1,127,21,0,3,8,16,21,1,45,21,0,2,17,21,1,129,1,16,14,21,0,1,21,1,88,21,0,4,17,25,21,0,1,21,1,65,16,21,1,66,0,23,17,21,1,129,1,16,14,21,0,1,21,1,91,16,21,1,45,21,0,2,17,21,1,129,1,16,14,21,0,1,21,1,91,0,22,17,25,21,0,1,21,1,65,16,21,1,66,0,22,17,21,1,129,1,16,14,21,0,1,21,1,91,16,25,21,0,1,21,1,66,16,21,1,66,0,22,17,21,1,128,1,16,14,21,0,1,0,18,21,1,11,7,16,21,1,20,21,1,60,7,16,21,1,128,1,16,14,21,0,1,21,1,88,21,1,7,0,22,8,21,1,68,21,1,88,21,1,7,0,27,8,19,21,1,20,21,1,60,7,9,16,21,1,129,1,16,14,21,0,1,0,3,16,25,21,1,4,21,1,4,0,21,7,0,5,0,101,19,3,1,21,1,99,21,0,1,21,1,91,0,22,17,17,7,21,1,126,21,1,63,21,1,115,21,0,1,21,1,91,0,21,17,19,21,1,126,9,19,25,21,0,1,21,1,133,1,16,25,21,0,1,21,0,5,21,0,2,17,22,0,6,11,14,0,21,22,0,7,11,22,0,8,11,14,21,0,6,0,21,21,1,81,15,139,1,8,16,14,21,0,1,22,0,9,11,14,15,140,1,22,0,10,11,14,21,0,7,21,0,10,21,1,1,21,0,4,21,0,2,19,7,16,22,0,11,11,14,21,0,8,21,1,70,16,21,0,10,21,1,1,21,1,134,1,21,0,4,7,21,0,2,19,7,16,22,0,12,11,14,21,0,6,0,21,21,1,81,21,1,3,21,0,11,21,0,12,3,2,7,21,1,126,0,21,21,1,8,21,1,63,8,19,21,1,126,21,1,57,19,8,16,25,21,1,21,21,1,6,0,18,21,0,1,7,8,25,21,0,1,25,21,0,1,25,21,0,1,14,21,1,7,21,2,72,16,25,0,22,0,7,21,1,6,17,22,1,6,12,14,21,0,1,0,16,21,1,6,17,25,21,1,8,21,1,7,21,1,5,0,16,21,0,1,17,17,22,1,8,12,25,21,0,2,0,14,16,22,0,5,11,14,21,0,2,0,12,16,0,17,16,21,2,20,0,8,21,2,7,21,0,1,0,14,16,21,2,8,0,16,8,0,12,21,0,5,21,2,8,0,16,8,19,8,7,0,22,17,0,5,0,32,17,14,21,0,5,21,2,20,0,8,7,0,22,17,0,17,16,0,18,21,0,1,0,15,16,21,2,8,0,16,8,21,0,4,21,0,2,0,15,16,21,2,8,0,16,8,19,7,16,0,15,21,0,5,17,25,21,0,2,0,14,16,22,0,5,11,14,21,0,2,0,12,16,22,0,6,11,14,21,0,1,0,14,16,22,0,7,11,14,21,0,6,0,17,16,21,2,20,0,8,21,2,7,21,0,7,21,2,8,0,16,8,0,12,21,0,5,21,2,8,0,16,8,19,8,7,0,22,17,0,5,0,33,17,14,21,0,6,0,7,21,0,1,0,12,16,17,0,17,16,21,2,20,0,8,21,2,7,0,6,21,2,7,21,0,6,8,21,2,4,0,16,7,21,0,7,19,8,7,0,22,17,22,0,8,11,14,21,0,2,0,15,16,22,0,9,11,14,21,0,1,0,15,16,22,0,10,11,14,21,0,8,0,17,21,2,6,0,18,21,2,3,21,0,10,7,0,16,0,6,21,2,7,0,8,21,2,7,21,0,8,8,8,19,21,0,4,21,0,9,21,2,8,0,16,8,19,7,8,21,0,9,21,2,18,16,17,0,15,16,0,15,21,0,7,17,25,21,0,1,21,2,25,21,0,4,7,21,0,2,17,25,21,0,1,0,18,15,141,1,21,0,2,7,7,16,25,21,0,2,0,18,15,142,1,21,0,1,7,7,16,25,21,1,6,0,8,0,23,17,0,13,21,0,1,21,2,20,21,2,15,7,16,22,1,10,12,0,7,21,0,1,21,2,20,21,2,16,7,16,22,1,9,12,17,17,25,21,0,1,14,21,2,4,0,21,7,21,2,14,0,21,21,2,105,21,1,8,21,2,8,0,16,8,21,2,6,21,0,4,8,7,21,1,7,17,19,22,0,5,11,14,21,2,1,21,1,6,3,2,21,2,0,0,13,21,2,7,21,1,6,8,8,22,0,6,11,14,0,21,0,12,21,1,6,17,0,6,21,1,6,17,0,2,0,23,17,21,2,16,16,22,0,7,11,0,17,16,0,18,21,2,1,0,6,0,22,19,0,7,21,0,7,19,0,10,0,23,19,7,16,21,2,20,15,143,1,7,21,1,6,0,17,16,17,25,21,0,1,0,18,21,2,11,7,16,21,2,20,0,8,7,0,22,17,0,5,0,36,17,14,0,22,0,7,21,1,3,17,22,0,3,11,14,21,2,1,0,7,21,0,3,19,21,2,4,0,16,7,21,1,3,0,17,16,0,18,0,7,21,2,7,21,0,3,8,7,16,0,19,21,2,1,21,2,4,0,16,7,21,0,1,19,0,12,0,21,19,0,8,0,7,19,0,6,21,2,1,19,7,16,19,22,0,4,11,14,21,0,1,0,19,0,6,7,16,21,2,8,0,16,8,22,0,5,11,14,0,21,21,0,4,16,22,0,6,11,21,0,5,16,22,0,7,11,14,21,0,3,21,0,5,16,0,17,16,0,18,15,144,1,7,16,25,21,0,1,0,7,21,1,3,17,0,17,16,0,18,0,6,21,2,7,21,0,1,8,7,16,25,21,0,1,3,1,25,21,0,1,14,21,1,9,0,16,21,1,12,0,16,21,1,14,17,17,22,0,3,11,14,21,1,14,0,6,0,22,17,22,1,14,12,21,1,13,16,22,1,15,12,14,21,0,3,25,21,0,1,0,12,21,1,15,17,25,21,0,1,0,12,21,2,7,21,1,4,8,0,7,0,22,19,21,2,9,15,145,1,8,16,14,21,1,5,0,16,0,22,0,6,21,1,3,17,22,1,3,12,17,25,21,0,2,22,0,5,11,14,21,0,4,22,0,6,11,14,21,0,1,0,18,15,146,1,7,16,25,21,0,2,22,0,3,11,14,21,1,9,0,16,21,0,1,17,22,0,4,11,14,21,1,5,0,18,0,16,21,2,7,21,0,1,8,7,16,22,0,5,11,14,21,0,4,0,17,16,0,18,21,2,3,21,0,5,7,0,16,0,8,21,2,7,21,0,3,8,19,7,16,22,0,6,11,14,21,0,3,0,17,16,0,18,21,2,2,7,21,0,6,17,0,18,21,2,1,7,21,1,10,0,17,16,17,0,15,16,21,2,42,0,12,7,21,0,5,17,21,2,20,0,8,7,0,22,17,0,5,0,47,17,14,21,0,6,21,2,30,16,22,0,7,11,14,21,0,7,21,2,18,16,0,17,16,0,18,21,0,6,21,1,8,0,6,7,0,21,17,21,2,34,21,0,7,17,21,2,8,0,16,8,21,2,8,0,7,8,7,16,22,0,8,11,14,21,0,8,0,18,21,2,1,7,21,1,12,17,21,2,42,0,6,7,21,0,7,0,18,21,0,6,21,2,8,0,16,8,21,2,8,0,8,8,7,21,1,12,17,17,22,1,12,12,14,21,0,7,0,18,0,6,21,2,7,21,0,4,21,2,8,0,8,8,8,7,21,1,11,17,22,1,11,12,14,21,0,4,0,8,22,1,10,13,25,21,0,4,0,16,21,0,1,17,0,16,21,0,2,17,25,21,2,34,21,2,7,21,1,7,0,7,21,1,6,17,0,17,16,0,18,0,6,21,2,7,21,1,7,8,7,16,8,22,0,3,11,14,21,1,5,0,16,0,21,17,21,0,3,16,22,0,4,11,14,21,1,5,0,18,21,0,3,21,2,42,0,12,7,21,0,4,19,21,2,20,0,8,7,9,7,16,21,2,20,0,8,7,0,22,17,0,5,0,48,17,14,21,0,4,21,2,20,0,8,7,16,22,0,5,11,0,17,16,0,15,21,0,4,17,22,0,6,11,14,21,0,6,0,18,21,2,2,7,21,0,1,17,21,1,13,21,0,6,0,18,0,6,21,2,7,0,8,21,2,7,21,0,5,8,8,7,21,0,2,17,17,25,21,0,2,0,12,16,21,2,12,0,22,17,0,5,21,1,6,17,14,21,0,2,21,2,73,16,22,0,2,12,14,21,0,2,0,18,21,2,10,7,16,21,2,20,0,8,7,0,22,17,0,5,21,1,7,17,14,21,0,2,21,2,18,16,22,0,3,11,14,21,0,1,21,2,46,16,21,2,18,21,2,8,21,2,14,8,21,2,9,15,147,1,8,21,0,3,17,22,0,4,11,14,15,148,1,22,0,5,11,14,0,21,21,2,13,16,22,0,6,11,14,0,22,22,0,7,11,14,15,149,1,22,0,8,11,14,0,21,22,0,9,11,14,21,0,3,0,17,16,0,18,21,0,2,21,2,8,0,16,8,15,150,1,21,1,4,15,151,1,7,21,0,8,21,2,2,19,3,2,21,2,0,21,1,3,8,21,0,4,21,2,8,0,16,8,19,7,16,22,0,10,11,14,21,0,1,21,2,21,16,0,15,21,2,7,21,0,4,8,15,152,1,3,2,21,2,0,21,0,6,0,12,16,21,2,13,0,21,17,8,16,25,21,0,1,0,12,16,0,13,0,22,17,0,5,0,56,17,14,21,0,1,21,1,3,21,0,2,17,25,21,0,2,0,12,16,21,2,12,0,22,17,0,5,0,57,17,14,21,0,1,21,2,46,16,21,2,18,21,2,6,0,13,8,21,0,2,17,0,5,0,58,17,14,21,0,2,21,2,18,16,22,0,3,11,14,21,0,2,0,15,16,21,2,8,0,16,8,22,0,4,11,14,21,0,1,21,0,3,21,2,13,0,21,17,21,2,9,15,153,1,8,0,21,17,25,21,0,1,21,2,66,21,0,4,17,25,21,0,1,21,2,42,21,2,1,0,22,3,2,21,2,0,21,2,2,8,7,21,1,4,17,21,2,20,21,2,62,7,16,22,0,3,11,14,21,0,3,21,2,63,0,21,17,0,5,0,64,17,14,21,1,4,21,2,65,16,0,17,16,21,2,62,21,1,4,17,21,2,20,21,2,69,7,16,22,0,4,11,14,21,1,3,0,16,21,0,4,17,21,2,137,1,16,22,0,5,11,14,0,30,21,2,63,21,0,5,17,0,5,0,65,17,14,21,2,66,21,2,7,21,2,58,8,0,5,0,66,19,21,2,2,21,2,1,19,22,0,6,11,14,21,0,3,21,2,54,21,1,7,17,21,0,6,21,2,58,21,2,59,3,3,21,2,0,21,0,5,21,2,58,0,23,17,8,16,22,0,7,11,14,21,1,3,21,2,42,21,2,1,21,0,7,3,2,21,2,0,21,2,2,8,7,21,1,4,17,22,1,3,12,14,21,0,7,21,2,62,21,0,3,17,21,0,5,21,2,66,0,25,17,21,2,9,21,2,63,21,2,7,21,1,7,8,21,2,9,15,154,1,8,8,16,25,21,1,8,0,17,16,0,18,21,2,2,7,21,2,7,0,1,8,15,155,1,3,2,21,2,0,21,1,7,21,2,63,0,21,17,8,21,0,1,17,25,21,0,1,21,2,11,16,0,5,0,67,17,14,21,0,1,0,17,16,25,21,0,1,21,2,66,16,21,2,66,0,22,17,0,5,0,68,17,14,21,0,1,0,18,21,1,3,7,16,21,2,20,0,18,21,2,23,21,2,7,21,2,75,8,7,7,3,0,21,2,63,16,17,25,21,1,9,21,1,7,21,2,69,21,0,4,17,7,22,0,5,11,14,21,0,1,21,2,42,21,0,5,7,21,2,2,21,2,5,0,18,21,0,1,21,2,8,21,0,5,8,7,8,21,2,1,21,2,5,0,18,21,2,1,21,0,5,21,0,2,19,7,8,21,1,8,3,4,21,2,0,21,2,45,21,2,6,21,2,77,8,21,2,67,21,0,4,21,2,59,0,21,17,19,21,2,61,0,21,21,2,67,21,0,4,17,21,2,60,21,1,7,17,19,21,2,74,0,23,19,21,2,20,21,2,69,21,2,7,0,23,21,2,8,21,2,62,8,8,7,9,8,21,0,2,17,25,21,0,1,21,2,46,16,21,2,34,21,0,2,0,17,16,17,22,0,3,11,14,21,0,1,21,2,22,21,0,2,17,22,0,4,11,21,2,20,21,2,62,7,16,22,0,5,11,14,21,0,3,21,2,20,21,2,62,7,16,0,17,16,0,18,21,2,1,21,2,62,21,0,5,19,21,2,69,21,0,5,0,17,16,21,2,75,21,0,4,17,19,21,2,5,0,18,21,0,1,21,2,75,16,21,2,8,0,16,8,7,8,7,16,21,2,75,21,0,3,17,25,21,0,2,21,2,66,21,1,4,17,25,21,1,3,21,2,69,22,1,4,13,14,21,0,1,21,2,69,0,22,17,25,21,0,2,21,2,75,16,21,2,1,21,2,76,21,2,6,0,18,21,2,69,7,8,21,2,71,19,21,1,3,17,21,2,42,21,0,1,21,2,8,21,2,91,21,2,7,0,18,21,2,63,7,8,8,7,16,21,2,64,21,2,75,21,2,46,21,2,5,21,0,1,21,2,46,16,21,2,88,21,2,7,21,2,65,8,21,0,2,17,21,2,8,21,2,23,8,8,19,16,25,21,0,1,14,21,1,6,0,16,21,1,7,17,21,2,1,0,22,21,2,69,21,1,7,17,22,1,7,12,17,25,21,0,1,21,2,75,16,21,1,3,16,0,18,21,0,1,21,2,46,16,21,2,93,16,21,2,75,16,21,2,8,21,2,91,8,7,16,25,21,0,1,21,2,65,21,2,6,21,2,70,8,21,0,2,17,21,2,62,16,22,0,3,11,14,21,0,1,21,2,65,21,2,6,21,2,58,8,21,0,2,17,22,0,4,11,14,21,0,1,15,156,1,21,2,7,21,2,65,21,2,69,21,0,4,21,2,93,16,21,2,69,0,22,17,21,2,70,16,19,8,21,2,6,15,157,1,8,21,0,2,17,22,0,5,11,14,21,0,5,21,0,3,3,2,25,21,0,2,22,0,3,11,14,21,0,1,22,0,4,11,14,15,158,1,21,1,7,3,2,21,2,0,21,2,66,21,2,7,21,1,6,8,8,22,0,5,11,14,0,21,21,0,5,16,25,15,159,1,22,0,3,11,14,0,27,21,0,3,0,22,21,2,69,21,0,1,17,17,21,2,69,0,22,17,25,21,0,2,21,2,106,21,0,1,21,2,8,21,1,13,8,7,16,25,21,0,2,21,2,66,16,21,2,4,21,2,70,7,0,22,17,22,0,3,11,14,21,0,3,21,2,68,0,21,17,0,5,0,92,17,14,21,0,1,21,2,21,16,21,2,1,21,2,5,21,0,3,21,2,83,0,21,8,8,21,2,1,21,0,3,21,2,83,21,2,63,8,3,2,21,2,0,21,0,3,21,2,63,0,21,17,8,21,2,6,0,18,21,2,46,7,8,21,1,3,9,3,2,21,2,0,21,0,2,21,2,65,16,21,2,63,0,21,17,8,15,160,1,3,2,21,2,0,21,2,75,21,2,5,21,2,65,8,21,2,63,0,26,19,21,2,6,21,2,60,8,8,21,0,2,17,25,21,0,1,25,21,0,1,21,2,10,16,0,5,0,102,17,14,21,0,1,21,2,58,21,1,8,17,22,1,8,12,14,21,0,1,21,2,59,21,1,7,17,22,1,7,12,25,21,0,1,21,2,69,0,21,17,21,2,93,16,21,2,99,21,1,9,3,1,17,0,19,21,2,2,21,2,5,21,0,4,8,7,16,25,21,0,1,21,2,2,21,0,4,17,25,21,0,4,21,2,2,21,0,1,17,25,21,0,2,22,0,3,11,0,7,16,22,0,4,11,14,0,21,22,0,5,11,22,0,6,11,22,0,7,11,14,0,25,22,0,8,11,14,21,0,1,0,22,0,12,21,2,7,17,0,7,0,22,17,21,3,9,0,18,0,8,21,3,7,21,2,7,8,7,8,16,21,3,8,0,16,8,21,3,6,21,1,5,8,22,0,9,11,14,21,0,9,0,21,0,22,0,23,3,4,22,0,10,11,14,0,6,15,161,1,3,2,0,16,21,0,3,0,13,0,26,17,17,22,0,11,11,14,15,162,1,22,0,12,11,14,15,163,1,15,164,1,21,0,12,3,3,21,3,0,15,165,1,8,22,0,13,11,14,21,0,1,0,18,21,0,1,21,3,8,15,166,1,8,7,16,25,21,1,6,21,1,7,0,12,21,0,1,17,21,3,9,15,167,1,8,16,25,21,0,1,22,2,4,12,21,3,4,0,16,7,21,2,6,17,22,2,5,12,14,0,27,22,2,3,12,25,21,1,5,22,0,3,11,14,21,0,1,21,1,6,22,1,5,13,14,21,0,3,25,21,0,1,21,3,23,21,0,1,21,3,18,16,0,7,21,0,2,17,0,17,21,3,5,0,18,0,22,7,8,16,17,25,21,0,1,0,18,0,6,7,21,0,2,0,18,21,0,4,21,3,8,0,8,8,7,16,17,25,21,0,1,0,22,21,3,8,0,12,8,0,7,0,22,19,21,3,9,21,1,5,21,0,2,7,21,3,7,0,17,8,8,21,1,7,17,21,1,5,21,0,2,0,8,21,1,7,17,7,22,1,6,13,14,0,22,22,1,7,12,14,21,0,1,21,3,18,16,25,21,0,2,0,8,22,1,7,13,14,21,0,2,25,0,22,22,1,9,12,25,21,1,3,0,7,21,1,4,21,3,18,16,17,0,17,16,0,18,0,6,21,3,7,21,1,3,8,21,3,4,0,16,7,21,1,4,19,7,16,22,0,3,11,21,3,23,22,1,10,13,14,21,0,3,21,3,20,0,8,7,21,1,7,17,0,12,21,3,7,0,22,8,0,7,0,22,19,21,3,9,15,168,1,8,16,14,21,0,1,0,15,16,21,3,8,0,16,8,22,0,4,11,14,21,1,9,21,3,1,21,3,9,15,169,1,8,16,14,21,1,6,0,15,21,1,10,17,0,18,21,0,4,7,16,25,21,0,1,0,22,0,7,21,1,3,17,21,3,13,21,0,2,17,21,3,9,21,3,52,21,0,0,21,3,7,21,0,2,0,6,0,22,17,8,7,8,16,21,2,3,21,0,2,21,1,4,16,17,25,21,2,7,21,3,70,21,0,1,17,0,17,16,0,18,21,2,6,0,1,16,7,16,21,3,23,22,2,6,13,14,21,2,7,25,21,0,1,21,3,57,21,2,7,17,0,18,21,2,6,21,3,8,0,16,8,7,16,25,21,0,2,0,18,21,0,1,21,3,8,0,16,8,7,16,25,21,0,1,21,3,66,21,0,2,17,0,19,21,3,60,7,16,21,3,20,21,3,69,7,16,22,0,3,11,14,21,0,3,21,3,93,16,0,18,21,0,2,21,3,8,0,16,8,7,16,21,3,20,21,3,62,7,16,22,0,4,11,14,21,0,3,21,3,64,21,3,7,21,1,4,8,21,3,9,21,0,2,21,0,1,3,2,21,3,8,21,3,42,0,16,7,8,21,3,5,15,170,1,8,8,16,14,21,0,4,25,21,1,4,21,3,69,21,3,7,21,0,1,8,21,3,6,21,2,5,8,21,1,3,17,21,3,66,21,3,7,0,21,8,21,3,9,21,0,1,21,3,69,0,22,17,21,3,5,21,1,5,8,8,16,25,21,0,1,0,22,21,3,8,21,3,64,8,21,3,9,15,171,1,8,21,0,2,17,25,21,0,2,21,3,109,16,21,3,94,16,22,0,3,11,14,21,0,1,21,3,108,21,0,2,21,3,91,21,0,3,17,17,21,3,4,21,3,70,7,0,22,17,21,3,59,0,21,17,21,3,4,21,3,91,7,21,0,3,17,22,0,4,11,14,21,0,1,21,1,3,21,3,83,21,3,45,8,21,0,2,21,3,91,21,0,4,17,17,21,2,2,21,3,9,21,3,62,21,3,7,21,3,70,21,3,7,21,0,4,8,8,21,3,69,21,3,2,19,8,21,0,2,21,3,65,16,17,25,21,0,1,21,1,8,0,7,0,22,17,21,4,9,21,1,9,0,7,0,22,19,21,4,9,15,172,1,8,8,0,22,0,7,21,0,1,17,17,25,21,0,2,0,6,21,1,3,17,22,1,4,12,14,21,0,1,0,6,21,1,3,17,22,1,7,12,21,2,6,16,22,1,6,12,0,6,21,1,3,17,21,2,6,16,22,1,5,12,14,21,1,7,0,13,21,3,6,17,22,1,8,12,14,21,1,6,21,1,11,16,14,21,1,7,21,1,13,21,1,4,17,25,21,0,2,0,6,0,22,17,22,1,4,12,0,12,21,1,6,17,0,8,0,23,17,0,6,22,1,8,13,14,21,0,2,25,21,0,1,0,6,0,22,17,22,1,7,12,0,12,21,1,5,17,0,6,22,1,8,13,14,21,0,1,25,21,0,1,21,1,10,21,4,0,21,1,8,8,21,0,2,17,25,21,0,1,0,16,21,1,7,21,1,13,21,1,4,17,17,25,0,22,0,6,21,0,1,17,21,2,4,16,22,2,6,12,21,2,5,16,22,2,7,12,14,21,2,6,25,21,0,1,0,17,16,21,2,5,21,0,1,7,22,2,6,13,25,21,4,3,21,0,1,0,1,16,7,21,1,4,3,2,21,4,0,0,13,21,4,7,0,21,8,8,22,1,4,12,25,21,0,1,21,4,20,21,4,70,7,16,21,4,62,16,22,2,3,12,14,21,0,1,21,4,20,21,4,58,7,16,21,4,62,21,1,4,17,22,1,4,12,25,0,23,21,4,54,21,0,2,17,21,4,58,16,22,0,3,11,21,4,69,21,0,1,17,22,0,4,11,21,3,2,16,22,0,5,11,14,21,0,1,21,0,4,3,2,0,16,21,0,5,17,21,2,3,21,0,2,21,4,57,0,23,17,21,4,62,21,0,5,17,21,4,69,21,0,3,17,17,25,21,0,1,14,0,23,22,2,8,12,14,21,2,4,22,2,7,12,14,21,0,1,22,2,4,12,25])
 ,provide.concat([0,1,2,32,3,8,-1,-Infinity,Infinity,4,str("´: 𝕩 must be a list"),str("Mapping: Equal-rank argument shapes don\'t agree"),str("Mapping: Argument shape prefixes don\'t agree"),str("⍋𝕩: 𝕩 must have rank at least 1"),str("/: Replication argument must have rank 1"),str("/: Amounts to replicate must be natural numbers"),str("⌽𝕩: 𝕩 must have rank at least 1"),str("𝕨⌽𝕩: 𝕨 must consist of integers"),str("↑𝕩: 𝕩 must have rank at least 1"),str("↓𝕩: 𝕩 must have rank at least 1"),str("𝕨⊏𝕩: 𝕩 must be an array"),str("𝕨⊏𝕩: Indices in 𝕨 must be integers"),str("𝕨⊏𝕩: Indices out of range"),str(">𝕩: Elements of 𝕩 must have matching shapes"),str("∾𝕩: elements of 𝕩 must all have the same rank"),str("∾𝕩: 𝕩 element rank must be at least argument rank"),str("∾𝕩: 𝕩 element shapes must be compatible"),str("∾𝕩: 𝕩 element trailing shapes must match"),str("∾𝕩: 𝕩 must be an array"),str("𝕨"),str("𝕩: 𝕨 must "),str("have rank at most 1"),str("consist of integers"),str("↑"),str("↓"),str("First-axis primitive: 𝕩 must have rank at least 1"),str("Multi-axis primitive: 𝕨 must have rank at most 1"),str("Multi-axis primitive: length of 𝕨 must be at most rank of 𝕩"),str("≥: No monadic form"),str("≤: No monadic form"),str("´: Identity not found"),str("𝕨⥊𝕩: 𝕨 must have rank at most 1"),str("𝕨⥊𝕩: 𝕨 must consist of natural numbers"),str("𝕨⥊𝕩: Can\'t compute axis length when rest of shape is empty"),str("𝕨⥊𝕩: 𝕨 must consist of natural numbers or ∘ ⌊ ⌽ ↑"),str("𝕨⥊𝕩: Shape must be exact when reshaping with ∘"),str("↕𝕩: 𝕩 must consist of natural numbers"),str("↕𝕩: 𝕩 must be a number or list"),str("˝: 𝕩 must have rank at least 1"),str("𝕨∾𝕩: Rank of 𝕨 and 𝕩 must differ by at most 1"),str("𝕨∾𝕩: Cell shapes of 𝕨 and 𝕩 must match"),str("𝕨/𝕩: lengths of components of 𝕨 must match 𝕩"),str("𝕨↕𝕩: 𝕩 must be an array"),str("𝕨↕𝕩: 𝕨 must have rank at most 1"),str("𝕨↕𝕩: length of 𝕨 must be at most rank of 𝕩"),str("𝕨↕𝕩: 𝕨 must consist of natural numbers"),str("𝕨↕𝕩: Window length 𝕨 must be at most axis length plus one"),str("⊔: Grouping argument must consist of integers"),str("⊔: Grouping argument values cannot be less than ¯1"),str("⊔𝕩: 𝕩 must be a list"),str("𝕨⊔𝕩: 𝕩 must be an array"),str("𝕨⊔𝕩: Compound 𝕨 must be a list"),str("𝕨⊔𝕩: Total rank of 𝕨 must be at most rank of 𝕩"),str("𝕨⊔𝕩: Lengths of components of 𝕨 must be compatible with 𝕩"),str("𝕨⊑𝕩: Indices in compound 𝕨 must be lists"),str("𝕨⊑𝕩: Index length in 𝕨 must match rank of 𝕩"),str("𝕨⊑𝕩: Indices in 𝕨 must consist of integers"),str("𝕨⊑𝕩: Index out of range"),str("⍋ or ⍒: Rank of 𝕨 must be at least 1"),str("⍋ or ⍒: Rank of 𝕩 must be at least cell rank of 𝕨"),str("⍋ or ⍒: 𝕨 must be sorted"),str("p⊐𝕩 or 𝕨∊p: p must have rank at least 1"),str("∊𝕩 or ⊐𝕩: 𝕩 must have rank at least 1"),str("⍷𝕩: Rank of 𝕨 cannot exceed rank of 𝕩"),str("𝕨⍉𝕩: 𝕨 must have rank at most 1"),str("𝕨⍉𝕩: Length of 𝕨 must not exceed rank of 𝕩"),str("𝕨⍉𝕩: 𝕨 must consist of natural numbers"),str("𝕨⍉𝕩: Skipped result axis"),str("⁼: Inverse failed"),str("⁼: Inverse does not exist"),str("⁼: Inverse not found"),str("⍟: Repetition numbers in 𝕨 must be integers")])
 ,[[0,1,0,141],[2,0,3034,6],[0,0,3061,3],[0,0,3065,3],[0,0,3069,3],[1,0,3073,5],[1,0,3081,5],[2,0,3099,6],[2,0,3114,6],[2,0,3133,6],[2,0,3155,6],[2,0,3177,6],[0,0,3209,3],[0,0,3220,3],[0,0,3229,3],[1,0,3238,9],[0,0,3351,3],[0,0,3391,4],[1,1,3467,4],[1,1,3540,3],[0,0,3604,3],[0,0,3615,5],[2,0,3699,12],[0,0,3905,4],[0,0,3954,6],[0,0,4044,7],[0,0,4173,5],[0,0,4248,3],[0,0,4265,4],[0,0,4326,4],[0,0,4428,3],[0,0,4481,4],[1,1,4542,2],[0,0,4575,4],[2,0,4716,16],[1,1,4946,2],[0,0,4970,3],[0,0,4997,3],[0,0,5023,3],[0,0,5062,4],[0,0,5159,3],[0,0,5188,7],[0,0,5235,14],[1,1,5469,8],[1,0,5522,6],[1,1,5630,2],[1,1,5688,2],[2,1,5698,4],[0,0,5734,3],[0,0,5761,3],[0,0,5783,3],[0,0,5805,3],[0,0,5816,3],[0,0,5845,3],[0,0,5851,9],[0,0,6002,5],[0,0,6035,3],[0,0,6044,3],[1,1,6050,2],[2,0,6119,10],[2,0,6178,8],[1,0,6371,5],[0,0,6413,8],[0,0,6649,5],[0,0,6717,3],[0,0,6751,4],[1,0,6918,8],[0,0,7018,4],[0,0,7102,6],[0,0,7433,4],[0,0,7646,3],[0,0,7664,4],[1,0,7737,9],[1,1,7807,3],[1,0,7832,14],[1,1,8267,4],[1,0,8317,6],[0,0,8456,4],[0,0,8524,3],[0,0,8598,3],[0,0,8653,4],[0,0,8782,4],[0,0,8903,3],[2,0,8943,6],[2,0,8972,7],[0,0,9014,6],[0,0,9167,3],[0,0,9239,3],[0,0,9278,5],[0,0,9425,3],[0,0,9474,3],[0,0,9501,3],[0,0,9591,3],[1,1,9646,2],[2,0,9655,13],[1,1,9809,2],[1,1,9823,2],[1,1,9827,2],[0,0,9831,3],[0,0,9843,3],[0,0,9866,3],[1,0,9887,6],[1,0,10004,11],[1,0,10225,5],[0,0,10240,3],[0,0,10255,3],[0,0,10270,3],[1,0,10315,8],[0,0,10454,8],[0,0,10622,3],[0,0,10648,3],[0,0,10654,4],[0,0,10703,3],[0,0,10713,3],[1,0,10758,7],[0,0,10785,9],[1,0,11071,5],[0,0,11087,7],[0,0,11254,11],[0,0,11496,3],[0,0,11524,5],[1,0,11620,5],[0,0,11631,8],[0,0,11888,3],[0,0,11929,3],[0,0,11949,3],[1,0,12003,6],[0,0,12156,6],[0,0,12278,3],[0,0,12289,3],[0,0,12310,3],[0,0,12410,3],[0,0,12441,3],[0,0,12479,6],[0,0,12586,6],[0,0,12636,4],[0,0,12666,3],[0,0,12685,4],[1,1,12843,2],[0,0,12847,3],[1,0,12890,5],[1,0,12927,5],[1,0,12938,5],[0,0,12949,14],[0,0,13125,3],[0,0,13146,3],[0,0,13175,4],[0,0,13198,3],[1,0,13231,5],[0,0,13257,3],[0,0,13327,3],[0,1,13341,0],[0,0,13348,5],[0,0,13483,3],[0,0,13537,3],[0,0,13572,3],[0,0,13596,3],[0,0,13613,5],[0,0,13724,3],[0,0,13779,3],[0,0,13803,5],[0,0,13932,3],[0,0,13972,3],[0,0,14055,3],[0,0,14089,3],[0,0,14118,3],[0,0,14136,3],[0,0,14153,3],[0,0,14182,3],[0,0,14200,3],[0,0,14232,3],[0,0,14275,6],[0,0,14354,3]]
);

// Compiler
runtime[40] = assertFn("Compiler");
let compile = run(
  new Uint8Array([0,53,0,0,0,52,17,22,0,0,11,14,0,74,0,75,0,76,0,77,0,21,21,0,0,17,0,78,0,79,0,80,0,81,0,82,0,20,0,53,0,45,3,2,17,0,38,0,29,7,0,54,17,0,83,0,53,0,25,16,0,0,0,84,17,0,85,0,55,22,0,1,11,0,25,16,0,40,0,0,7,0,87,17,0,20,16,0,37,0,21,7,0,86,17,0,56,0,0,0,52,17,0,21,0,89,17,0,21,0,88,0,24,0,54,17,17,3,14,0,39,0,13,7,0,11,0,46,0,22,8,0,21,19,16,22,0,2,22,0,3,4,2,11,14,15,1,22,0,4,11,14,15,2,21,0,2,7,22,0,5,11,14,21,0,3,0,19,0,21,0,58,19,0,23,0,13,19,0,44,0,0,7,9,0,48,0,37,0,39,0,22,7,7,8,16,22,0,6,22,0,7,22,0,8,22,0,9,22,0,10,22,0,11,22,0,12,22,0,13,22,0,14,22,0,15,22,0,16,22,0,17,22,0,18,22,0,19,4,14,11,14,0,30,0,48,0,1,8,0,12,0,9,0,15,0,47,0,58,8,19,0,30,0,47,0,57,8,19,22,0,20,11,14,21,0,15,0,30,16,22,0,21,11,14,0,58,0,21,0,61,0,25,16,0,26,16,0,27,0,60,17,17,0,21,21,0,3,0,23,0,59,17,0,21,0,58,17,0,27,16,0,23,21,0,14,0,30,16,17,17,22,0,22,11,14,0,59,0,58,3,2,0,40,0,1,7,0,59,0,60,0,62,3,3,17,0,20,16,22,0,23,11,14,15,3,22,0,24,11,14,15,4,22,0,25,11,14,0,52,0,30,0,47,0,57,8,0,24,0,47,0,57,8,21,0,25,3,4,0,50,0,29,0,31,21,0,15,0,30,16,0,91,0,92,3,3,19,0,30,9,8,22,0,26,11,14,15,5,22,0,27,11,14,15,6,22,0,28,11,14,15,7,22,0,29,11,14,15,8,22,0,30,11,14,15,9,22,0,31,11,25,21,0,1,0,33,0,91,0,92,3,2,17,0,42,0,10,7,16,0,8,16,0,36,0,90,17,14,0,58,0,36,0,47,0,21,8,0,93,21,0,1,0,13,16,0,11,0,57,17,0,37,0,27,7,0,94,17,0,95,21,0,1,3,4,17,25,21,0,1,0,48,0,29,8,0,48,0,17,0,51,0,18,0,27,0,13,19,0,45,21,1,4,8,8,8,0,18,0,19,19,22,0,2,11,14,21,0,1,0,28,16,22,0,3,11,14,0,19,0,28,21,0,1,0,29,21,0,3,17,19,0,6,0,57,19,0,37,0,1,7,0,57,19,0,37,0,29,7,21,0,3,19,21,0,2,0,19,19,25,0,96,0,14,21,0,1,17,22,0,3,11,14,0,91,0,14,21,0,1,17,0,9,0,47,0,24,0,47,0,61,8,0,23,0,13,19,8,16,0,27,16,22,0,4,11,14,0,92,0,14,21,0,1,17,22,0,5,11,0,27,16,22,0,6,11,14,21,0,4,21,0,6,0,24,0,54,17,21,0,3,0,27,16,3,3,0,21,16,22,0,7,11,0,28,16,22,0,8,11,14,21,0,7,0,29,21,0,8,17,22,0,7,12,14,21,0,4,0,0,0,61,17,21,0,6,0,24,0,57,17,0,57,0,21,21,1,0,0,14,21,0,1,17,17,0,27,16,0,27,0,47,21,0,3,0,44,0,0,7,16,0,21,0,58,17,0,48,0,29,0,45,0,19,0,21,0,58,19,0,24,0,54,19,0,1,0,19,19,8,8,8,16,3,3,0,21,16,0,29,21,0,8,17,22,0,9,11,14,15,10,0,51,15,11,8,22,0,10,11,14,21,0,9,0,28,21,0,7,17,0,13,0,48,0,21,8,16,0,13,0,37,0,23,7,0,57,19,0,48,21,0,10,8,16,0,24,0,54,17,22,0,11,11,14,21,0,9,0,38,0,21,7,21,0,7,17,0,27,21,0,11,17,22,0,12,11,14,0,20,0,37,0,21,7,21,0,1,0,13,16,19,0,41,0,27,7,9,0,24,0,54,19,22,0,13,11,14,21,0,12,21,0,13,16,22,0,14,11,0,44,0,13,7,16,0,8,16,22,0,15,11,14,21,0,5,0,9,0,47,0,19,0,37,0,21,7,0,58,19,0,24,0,57,19,8,16,0,9,21,0,14,17,0,9,21,0,15,17,22,0,16,11,0,8,16,0,9,22,0,15,13,14,21,0,12,0,27,21,0,3,0,29,21,0,7,0,27,21,0,11,17,17,0,8,16,17,22,0,17,11,14,21,0,17,21,0,13,16,0,44,0,13,7,16,0,2,21,0,17,0,38,0,30,7,16,21,0,13,16,0,37,0,1,7,21,0,16,17,0,44,0,0,7,16,17,0,37,0,1,7,0,57,17,0,37,0,35,7,21,0,1,17,22,0,18,11,0,34,16,22,0,19,11,14,21,0,17,0,38,0,26,0,45,0,30,8,7,16,21,0,13,16,0,27,21,0,15,17,22,0,20,11,14,21,0,1,0,27,21,0,15,17,0,27,0,47,21,0,20,8,0,49,0,39,21,1,2,0,30,16,7,8,16,21,1,5,16,0,37,0,1,7,21,0,20,17,22,0,21,11,14,21,1,16,21,1,17,21,1,18,3,3,0,39,0,30,7,0,57,17,0,42,0,0,7,16,0,22,21,1,16,0,30,16,17,21,1,20,21,0,21,17,22,0,22,11,0,11,0,47,0,19,0,21,0,58,19,0,23,0,13,19,8,16,22,0,23,11,14,21,1,15,0,30,16,0,14,21,0,21,17,22,0,24,11,14,21,0,24,0,0,22,0,22,13,14,21,0,24,0,0,22,0,23,13,14,21,1,18,0,42,0,0,7,16,0,0,0,54,17,0,14,21,0,21,17,22,0,25,11,14,21,0,21,0,15,0,47,21,1,18,0,30,16,0,48,0,0,8,8,0,2,0,18,19,0,1,0,19,19,21,1,1,17,0,35,21,0,23,0,44,0,0,7,16,0,2,21,0,22,0,11,21,0,25,17,17,0,37,0,1,7,0,57,17,17,22,0,26,11,14,21,0,21,0,27,21,0,23,17,0,37,0,1,7,21,1,18,0,30,16,17,0,37,0,3,0,45,0,5,8,7,21,1,1,17,22,0,27,11,14,21,0,26,0,31,16,22,0,28,11,0,11,0,47,0,44,0,6,7,0,21,0,54,19,0,23,0,13,19,8,16,22,0,29,11,14,21,0,27,0,27,21,0,29,17,0,12,0,58,17,22,0,30,11,0,13,16,22,0,31,11,14,21,0,27,0,6,0,58,17,0,14,0,47,0,61,8,0,48,0,9,8,0,0,0,19,19,21,0,22,0,11,0,47,0,19,0,37,0,21,7,0,58,19,0,24,0,57,19,8,16,0,37,0,27,7,21,0,25,17,17,22,0,27,12,14,21,0,21,0,27,0,47,21,0,20,8,0,49,21,0,18,0,31,21,0,19,17,0,0,21,0,31,17,0,0,21,1,21,17,8,16,0,27,0,47,21,0,23,8,0,49,21,0,30,0,28,16,0,28,16,0,29,21,0,28,17,0,0,21,1,21,17,8,16,0,27,21,1,19,21,1,20,21,0,21,17,0,10,21,0,22,17,0,8,16,0,10,21,0,23,17,17,22,0,21,12,14,21,1,9,21,1,20,21,0,21,17,0,9,0,47,0,19,0,10,21,1,11,0,30,16,0,0,0,61,0,63,3,2,17,0,33,21,0,21,17,19,0,21,0,57,19,0,23,0,13,19,8,16,0,8,16,0,37,0,27,7,22,0,21,13,14,21,1,9,21,1,20,21,0,21,17,0,9,21,1,11,0,30,16,0,0,0,59,0,60,3,2,17,0,33,21,0,21,17,0,37,0,21,7,0,57,17,0,24,0,57,17,17,0,8,16,0,37,0,27,7,22,0,21,13,14,21,1,21,0,1,21,0,21,17,21,0,31,0,48,0,11,8,0,9,0,15,0,47,0,58,8,19,16,22,0,32,11,14,21,1,22,0,29,21,0,21,0,5,21,1,21,17,17,0,27,0,47,21,0,32,8,0,49,21,0,27,8,16,22,0,33,11,14,21,1,14,0,30,16,0,37,0,22,7,0,60,17,21,1,20,21,0,21,17,0,2,0,60,17,0,0,22,0,21,13,14,21,0,21,21,0,33,21,0,30,0,8,16,0,42,0,0,7,16,21,0,19,0,21,21,0,26,0,29,21,0,29,0,27,16,0,27,21,0,30,17,17,17,3,4,25,21,1,17,0,42,0,25,0,48,0,0,8,7,16,22,0,3,22,0,4,22,0,5,22,0,6,4,4,11,14,21,1,16,0,30,16,0,48,0,1,8,0,26,0,45,0,42,0,2,0,47,0,53,8,0,48,0,0,8,7,8,9,22,0,7,11,14,21,0,7,0,24,0,47,0,57,8,21,0,7,9,0,1,9,3,2,0,50,0,30,0,14,21,0,3,19,8,22,0,8,11,14,0,24,0,47,0,57,0,48,0,0,8,8,0,58,0,13,0,4,0,53,19,0,3,21,0,7,19,3,2,0,50,0,13,0,11,0,58,19,8,9,0,0,0,23,0,45,21,0,7,8,19,0,47,21,0,4,0,11,16,0,48,0,31,8,8,22,0,9,11,14,0,64,0,65,21,0,9,3,3,0,50,0,29,0,31,21,0,5,21,0,6,3,2,19,0,30,9,8,22,0,10,11,14,21,1,18,0,30,16,0,0,0,97,0,42,0,1,7,16,17,0,31,21,0,1,17,0,30,16,22,0,11,11,14,21,0,1,0,23,21,0,11,17,21,0,10,0,24,0,47,0,57,8,21,0,10,9,0,1,9,3,2,0,50,0,30,0,14,21,0,3,19,8,16,22,0,12,11,14,21,0,12,21,0,1,0,13,16,0,11,21,0,11,17,0,51,0,37,0,18,0,24,0,57,0,0,21,0,11,17,19,21,0,8,9,0,4,0,53,19,0,48,0,2,8,7,8,21,0,1,17,25,0,66,22,0,3,11,14,21,0,1,0,6,0,57,17,0,41,0,4,7,21,0,3,17,0,5,16,22,0,4,11,14,21,0,4,0,0,0,57,17,0,44,0,0,7,0,48,0,19,0,21,0,58,19,0,23,0,13,19,0,48,0,27,8,0,1,0,19,0,30,0,54,19,0,25,9,19,8,16,0,28,16,0,28,16,22,0,5,11,14,21,0,1,15,12,21,0,4,17,0,29,21,0,5,17,25,0,40,0,14,7,0,43,15,13,7,0,19,0,45,0,38,0,58,7,8,19,0,30,0,54,19,22,0,3,11,14,15,14,22,0,4,11,14,0,58,21,0,4,0,99,8,0,37,0,57,21,0,4,0,100,8,7,3,2,0,50,0,13,0,46,0,12,8,8,22,0,5,11,14,21,0,1,21,0,5,0,101,3,2,0,50,0,13,0,46,0,5,8,0,11,21,0,3,19,8,21,0,2,17,0,37,0,36,7,0,58,17,25,0,94,0,27,21,0,1,0,13,16,0,11,0,57,17,17,0,21,0,102,17,0,37,0,36,7,0,58,17,25,21,0,2,22,0,3,22,0,4,4,2,11,14,21,1,11,0,30,0,48,0,1,8,0,7,0,61,19,0,4,0,54,19,0,2,21,1,20,19,21,0,1,17,22,0,5,11,0,44,0,0,7,16,22,0,6,11,0,28,16,22,0,7,11,14,21,1,11,0,30,16,0,0,0,61,17,0,37,0,22,7,0,61,17,21,1,20,21,0,1,17,0,2,21,0,5,17,22,0,8,11,14,21,0,1,0,29,0,47,21,0,7,8,0,46,0,27,0,47,0,54,0,48,0,14,8,8,0,37,0,1,7,0,57,19,0,17,0,51,21,1,28,8,0,27,0,47,0,57,0,48,0,14,8,8,19,8,21,0,5,17,14,21,0,6,0,30,21,0,7,0,30,16,17,0,15,0,58,17,0,36,0,103,17,14,21,1,12,21,1,20,21,0,1,17,0,10,0,47,0,26,0,47,0,57,8,8,16,22,0,9,11,14,21,0,9,0,29,0,47,21,0,7,8,0,49,0,26,0,47,0,54,8,8,16,22,0,10,11,14,21,0,10,0,10,21,0,9,17,22,0,11,11,14,21,0,9,0,29,21,0,7,17,0,28,16,0,37,0,29,7,22,0,7,13,14,21,0,11,0,8,16,0,2,22,0,4,13,14,0,58,0,12,21,0,5,17,22,0,12,11,14,21,1,11,0,30,16,0,0,0,57,17,0,14,21,0,1,17,0,11,21,0,11,17,22,0,13,11,14,21,1,9,21,1,20,21,0,1,17,0,10,21,0,9,17,0,10,21,0,12,17,0,29,0,37,0,21,7,0,1,0,21,0,45,0,44,0,0,7,8,19,0,57,19,0,28,0,48,0,28,0,48,0,37,0,29,7,8,0,1,0,37,0,29,7,19,0,29,0,47,0,28,8,0,18,19,8,0,18,0,21,0,54,19,19,21,0,7,17,0,24,0,54,17,0,0,0,57,17,0,44,0,0,7,16,0,28,16,22,0,14,11,14,21,0,8,0,29,21,0,14,17,0,44,0,0,7,16,22,0,15,11,0,28,16,22,0,16,11,14,21,0,16,0,37,0,29,7,22,0,14,13,14,21,0,16,0,37,0,29,7,22,0,15,13,14,21,0,14,0,37,0,29,7,22,0,1,13,14,21,0,8,0,29,21,0,14,17,22,0,17,11,14,0,58,0,11,21,0,17,17,0,27,16,22,0,18,11,14,0,58,0,12,21,0,17,17,22,0,19,11,0,44,0,0,7,16,22,0,20,11,14,0,58,0,48,0,21,8,0,44,0,0,7,9,0,27,0,57,0,21,21,0,19,17,19,0,19,0,21,0,58,19,0,23,0,13,19,0,48,0,1,8,9,22,0,21,11,14,0,14,0,45,21,0,21,8,0,24,0,57,19,0,11,0,58,19,22,0,22,11,14,21,0,1,0,28,21,1,14,0,30,16,0,0,0,60,17,0,0,0,58,0,59,0,63,0,60,3,4,17,17,21,0,22,0,47,0,59,8,0,2,0,61,19,0,6,21,0,22,0,47,0,61,8,19,0,2,0,61,19,0,0,21,0,22,0,47,0,57,8,19,0,21,0,58,19,16,22,0,23,11,14,21,1,23,0,29,21,0,23,17,22,0,24,11,14,21,0,4,0,29,0,47,21,0,14,0,29,21,0,18,17,8,0,49,0,63,0,25,16,0,27,0,47,0,15,0,47,0,61,8,0,0,0,57,19,8,16,0,29,21,0,23,0,24,0,57,17,17,8,16,22,0,4,12,14,21,0,4,0,15,0,57,17,0,10,21,0,4,0,14,0,59,17,0,29,0,47,21,0,7,8,0,49,0,26,0,47,0,54,8,8,16,17,0,19,0,2,0,47,0,13,0,45,0,25,8,0,0,0,57,19,8,0,44,0,6,7,9,0,46,0,14,8,0,10,0,47,0,8,8,19,0,9,0,18,19,21,0,13,17,0,0,22,0,4,13,14,21,1,21,0,1,21,0,1,17,22,0,25,11,21,0,3,0,48,0,11,8,0,9,0,15,0,47,0,58,8,19,16,22,0,26,11,0,27,16,22,0,27,11,14,21,0,1,0,29,21,0,27,17,22,0,28,11,14,21,1,14,21,1,20,21,0,1,17,0,27,16,22,0,29,11,14,21,1,10,0,30,16,0,14,21,0,1,17,0,29,21,1,10,21,1,20,21,0,1,17,0,2,0,47,0,13,0,45,0,25,8,8,16,0,44,0,6,7,16,17,22,0,30,11,14,21,0,8,0,1,21,0,5,17,0,29,21,0,14,17,0,44,0,0,7,16,0,28,16,22,0,7,12,14,21,0,14,0,29,21,0,7,17,22,0,31,11,14,21,0,9,0,1,21,0,10,17,0,29,21,0,31,17,0,12,0,27,0,46,0,1,8,0,11,19,0,58,17,0,37,0,3,7,0,61,17,0,0,0,57,17,22,0,32,11,14,21,1,11,0,30,16,0,0,0,60,17,0,14,21,0,1,17,0,29,21,0,7,17,0,27,16,22,0,33,11,14,21,0,9,0,29,21,0,31,17,0,28,16,22,0,34,11,0,37,0,29,7,22,0,7,13,14,21,0,14,0,29,21,0,7,17,22,0,31,12,14,21,0,7,0,37,0,29,7,22,0,1,13,14,21,0,31,0,37,0,29,7,22,0,4,13,14,21,0,31,0,37,0,29,7,22,0,12,13,14,21,0,9,0,12,21,0,10,17,0,29,21,0,31,17,0,27,16,22,0,35,11,14,21,0,7,0,28,16,22,0,36,11,14,21,0,34,0,28,16,0,29,22,0,33,13,14,21,1,9,21,1,20,21,0,1,17,22,0,37,11,14,21,0,9,0,29,21,0,31,17,0,10,21,0,12,17,0,10,21,0,37,17,22,0,38,11,14,21,1,10,0,30,16,0,37,0,22,7,0,61,17,21,1,20,21,0,1,17,22,0,39,11,14,21,0,39,0,10,21,0,38,17,0,1,22,0,4,13,14,0,61,0,16,21,0,4,17,22,0,40,11,14,0,59,0,14,21,0,4,17,0,26,0,57,17,0,10,0,57,0,16,21,0,4,17,17,22,0,41,11,14,21,0,41,0,29,21,0,38,0,26,0,54,17,0,2,0,47,0,13,0,45,0,25,8,8,16,0,44,0,6,7,16,17,22,0,42,11,14,21,0,41,0,26,0,57,17,0,9,21,1,10,0,30,16,0,0,0,57,17,0,14,21,0,1,17,17,0,11,21,0,42,17,22,0,43,11,14,0,59,0,14,21,0,4,17,0,26,0,57,17,0,11,21,0,39,17,0,10,21,0,40,17,22,0,44,11,14,21,0,43,0,10,21,0,44,17,0,8,16,0,26,16,0,2,0,45,0,44,0,6,7,8,0,1,0,18,19,0,47,0,13,0,45,0,25,8,8,16,0,26,16,22,0,45,11,14,21,0,39,0,27,16,21,0,45,0,48,0,29,8,0,0,0,57,19,0,0,0,19,19,16,22,0,46,11,14,0,57,0,1,21,0,46,17,0,37,0,21,7,21,0,1,0,13,16,17,0,41,0,27,7,16,0,24,0,54,17,0,19,0,21,0,58,19,0,23,0,13,19,0,48,0,1,8,16,0,29,21,0,36,17,0,44,0,0,7,16,0,26,0,54,17,22,0,47,11,0,29,21,0,7,17,22,0,48,11,14,21,0,4,0,27,0,47,21,0,48,8,0,49,0,39,0,54,7,8,16,22,0,4,12,14,21,0,44,0,8,16,0,44,0,0,7,0,2,0,45,0,44,0,6,7,8,0,1,0,19,19,21,0,38,19,0,15,0,11,0,7,19,0,61,19,0,9,0,19,19,16,0,9,21,0,38,0,2,0,47,0,13,0,45,0,25,8,0,0,0,57,19,8,0,44,0,6,7,9,0,46,0,15,8,21,0,39,17,17,22,0,49,11,14,21,0,39,0,10,21,0,38,17,0,37,0,21,7,0,58,17,0,24,0,57,17,0,12,21,0,40,17,22,0,50,11,14,21,0,50,0,27,16,0,26,16,22,0,51,11,14,21,0,50,0,26,0,54,17,0,11,21,0,40,17,0,10,0,57,0,14,21,0,4,17,17,0,11,21,0,50,0,26,0,57,17,0,9,21,0,44,17,17,0,9,21,0,42,0,8,16,0,10,21,0,49,17,17,0,11,21,0,48,0,26,0,57,17,17,0,27,16,22,0,52,11,14,0,58,0,14,21,0,4,17,0,11,21,0,44,17,0,10,0,58,0,16,21,0,4,17,0,9,21,0,42,17,17,0,9,21,1,13,0,30,16,0,13,21,0,1,17,17,0,37,0,21,7,0,58,17,0,24,0,57,17,0,29,21,0,52,17,22,0,53,11,14,21,0,3,0,0,21,1,21,17,0,16,21,0,1,17,22,0,54,11,14,21,1,8,0,42,0,0,7,16,0,0,0,54,17,0,15,21,0,1,17,0,10,21,0,54,17,0,27,16,22,0,55,11,14,21,0,1,0,29,21,0,55,17,22,0,56,11,0,34,16,0,9,16,22,0,57,11,14,21,1,11,0,30,16,0,0,0,63,17,0,14,21,0,1,0,27,21,0,12,17,17,22,0,58,11,14,0,57,0,21,21,0,38,17,0,9,21,0,12,0,21,0,57,17,17,0,1,0,58,0,21,21,0,37,17,17,0,44,0,0,7,16,0,27,0,57,0,21,21,0,12,17,17,0,24,0,47,0,1,8,0,1,0,24,19,0,57,17,0,27,21,0,58,17,0,0,0,57,17,22,0,59,11,14,21,0,58,0,21,0,58,17,0,29,0,47,0,44,0,0,7,8,21,0,12,17,0,12,21,0,37,17,0,27,16,22,0,60,11,14,21,1,11,0,30,16,0,0,0,61,17,0,14,21,0,1,17,0,27,16,22,0,61,11,14,21,0,47,0,9,21,0,30,17,0,9,21,0,26,17,22,0,62,11,0,29,21,0,27,17,22,0,63,11,14,21,0,62,21,0,21,16,22,0,64,11,14,21,0,20,0,29,21,0,27,17,0,37,21,0,16,0,29,21,0,18,17,0,21,21,0,1,0,13,16,17,7,0,29,0,27,0,47,21,0,63,8,19,0,21,21,0,16,0,27,21,0,19,17,0,21,0,54,17,0,48,0,29,8,19,16,22,0,65,11,14,21,0,65,0,28,16,0,29,0,47,21,0,28,0,27,0,47,21,0,63,8,0,48,0,21,8,16,22,0,66,11,0,48,0,29,8,0,28,9,8,16,22,0,67,11,14,21,0,65,0,19,0,29,21,0,67,0,27,0,47,0,15,0,47,21,0,27,0,13,16,8,8,16,19,0,13,0,47,0,19,0,21,0,58,19,0,23,0,13,19,8,9,0,46,0,10,8,21,0,66,17,0,42,0,9,7,0,57,17,0,36,0,104,17,14,21,0,67,0,29,0,47,21,0,63,0,37,0,27,7,16,0,1,16,0,21,21,0,63,17,0,48,0,29,0,45,0,44,0,0,7,8,8,0,28,9,8,16,0,27,0,47,21,0,27,0,13,16,0,48,0,11,8,8,16,22,0,67,12,14,21,0,67,0,37,0,29,7,22,0,63,13,14,21,0,28,0,29,21,0,67,17,0,13,0,47,0,19,0,21,0,58,19,0,23,0,13,19,8,0,11,21,0,63,19,0,48,0,19,0,42,0,10,7,0,58,19,0,51,0,37,0,27,0,45,21,1,29,8,7,8,8,16,14,21,0,27,0,29,0,47,21,0,67,8,0,49,0,29,0,47,21,0,63,0,2,0,47,0,13,0,45,0,25,8,8,16,0,44,0,6,7,16,8,8,16,22,0,68,11,14,21,0,25,0,29,21,0,29,17,0,0,0,61,17,0,15,0,47,0,58,8,0,48,0,0,8,16,0,0,21,0,23,0,7,0,61,17,0,2,0,59,17,0,29,21,0,20,0,29,21,0,29,17,17,17,0,21,21,0,62,0,44,0,0,7,16,0,8,0,47,0,2,0,47,21,0,19,8,0,44,0,6,7,9,8,16,0,1,21,0,24,0,29,21,0,20,17,17,0,29,21,0,68,17,17,22,0,69,11,14,21,0,29,0,21,21,0,27,17,22,0,70,11,0,11,16,0,20,0,59,17,0,21,16,22,0,71,11,14,21,0,47,0,29,21,0,70,17,0,0,0,67,17,21,0,29,0,39,0,58,7,16,0,21,21,0,68,21,0,15,0,48,0,29,8,0,46,0,1,8,21,0,27,17,17,21,0,69,3,3,22,0,72,11,14,21,0,36,0,29,22,0,18,13,14,21,0,55,21,0,55,21,0,18,21,0,18,21,0,61,21,0,60,21,0,33,21,0,33,21,0,35,21,0,35,21,0,46,21,0,45,0,29,21,0,51,17,0,6,0,57,17,0,0,21,0,51,17,21,0,53,0,0,21,0,52,17,0,0,0,47,21,0,45,0,48,0,29,8,0,2,21,0,53,19,8,16,3,13,0,21,16,0,37,0,29,7,21,0,7,17,0,21,21,0,71,17,0,28,16,22,0,73,11,14,21,0,55,0,39,0,58,7,16,21,0,56,0,31,21,0,57,17,21,0,18,0,39,0,68,7,16,21,0,18,0,13,16,0,25,16,0,0,0,57,17,3,4,0,21,21,0,72,17,0,21,16,22,0,74,11,14,21,0,61,0,39,0,69,7,16,21,0,60,0,39,0,70,7,16,21,0,48,0,29,21,0,33,17,0,0,0,59,17,21,0,59,21,0,48,0,29,21,0,35,17,0,0,0,59,17,21,0,32,21,0,1,0,0,21,0,43,17,0,27,21,0,39,17,0,0,21,1,10,0,30,16,0,1,0,71,17,17,21,0,4,0,29,21,0,51,17,0,0,0,60,17,21,0,42,0,29,21,0,52,17,0,2,0,73,17,0,1,21,0,53,17,0,0,0,72,17,0,14,0,47,0,53,8,0,2,0,56,19,0,0,0,19,19,16,3,9,0,21,16,0,21,21,0,74,17,0,29,21,0,73,17,22,0,75,11,14,21,0,24,0,0,21,0,64,17,0,39,0,11,0,46,0,22,8,7,21,0,61,0,13,0,46,0,22,8,21,0,74,17,21,1,20,21,0,73,17,0,21,0,57,17,0,27,16,0,37,0,29,7,21,0,75,0,6,0,57,17,0,41,0,4,7,0,66,17,0,5,16,0,0,0,57,17,0,21,0,58,17,0,44,0,0,7,16,17,17,0,39,0,21,7,0,61,0,25,0,46,0,26,0,48,0,40,0,22,7,8,8,0,59,17,0,20,16,0,29,21,0,23,17,17,22,0,76,11,14,0,69,0,21,21,0,75,17,21,1,27,16,21,0,57,21,0,76,3,3,25,21,0,1,21,1,24,16,22,0,3,22,0,4,22,0,5,22,0,6,4,4,11,14,21,0,3,21,1,30,21,0,5,21,0,4,3,2,17,22,0,7,22,0,8,22,0,9,4,3,11,14,21,0,6,0,39,21,1,26,7,16,0,21,21,0,2,17,0,29,21,1,21,0,16,21,0,8,17,0,2,21,0,2,0,13,16,0,1,21,0,5,17,0,0,21,1,21,17,17,0,1,21,0,8,17,17,22,0,10,11,14,21,0,7,21,0,10,21,0,9,3,3,25,21,0,1,0,26,16,0,30,16,0,14,0,58,17,25,21,0,1,0,29,0,47,21,0,2,0,27,21,0,1,17,8,0,49,0,39,0,57,7,8,16,21,1,10,21,0,2,0,37,0,29,7,16,17,25,21,0,2,0,2,16,22,0,3,11,14,21,0,1,21,0,3,0,42,0,10,7,16,0,51,0,27,0,47,21,0,3,8,0,46,21,1,3,0,48,0,3,8,0,5,9,0,48,21,0,0,8,8,0,21,0,7,0,0,21,0,3,0,48,0,2,8,19,0,47,21,1,3,8,19,8,0,57,0,1,21,0,2,17,17,25,21,0,1,0,24,0,57,17,0,37,0,21,7,0,58,17,0,0,21,0,2,17,0,44,0,6,7,16,0,6,21,0,1,17,25,0,32,0,14,0,18,0,45,0,13,8,19,0,37,0,27,7,0,19,19,0,0,21,0,2,19,0,37,0,29,7,21,2,2,19,0,21,0,89,19,0,21,21,0,1,19,0,21,0,98,19,25])
 ,[runtime[0],runtime[1],runtime[2],runtime[3],runtime[4],runtime[6],runtime[7],runtime[8],runtime[9],runtime[10],runtime[11],runtime[12],runtime[13],runtime[14],runtime[15],runtime[16],runtime[17],runtime[19],runtime[20],runtime[21],runtime[22],runtime[23],runtime[24],runtime[25],runtime[26],runtime[27],runtime[28],runtime[30],runtime[31],runtime[33],runtime[34],runtime[35],runtime[36],runtime[37],runtime[38],runtime[39],runtime[40],runtime[42],runtime[43],runtime[44],runtime[45],runtime[46],runtime[47],runtime[48],runtime[49],runtime[50],runtime[51],runtime[52],runtime[53],runtime[54],runtime[56],runtime[59],' ',10,-1,26,9,1,0,3,5,2,6,4,3.14159265358979,Infinity,128,21,15,25,14,11,16,7,str("+-×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍↑↓↕⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!"),str("˙˜˘¨⌜⁼´˝`"),str("∘○⊸⟜⌾⊘◶⎉⚇⍟"),str("⋄,"),str("←↩→"),str("(){}⟨⟩"),str("‿"),str("·"),str("𝕊𝕏𝕎𝔽𝔾𝕤𝕩𝕨𝕗𝕘"),str("@"),'0',str("¯.π∞"),str("_"),str("aA"),str("𝕨"),str(" "),str("Unclosed quote"),'\'','"',str("Unknown character"),str("s"),str(": "),'#',str("ea"),str("Missing "),str("opening"),str("closing"),str("Malformed bracket nesting"),str("Undefined identifier"),str("Swapped open and closed brackets"),str("Multiple definitions")]
 ,[[0,1,0,32],[0,0,462,3],[1,1,528,4],[0,0,621,34],[0,0,1932,13],[0,0,2266,6],[0,0,2372,6],[0,0,2485,3],[0,0,2515,77],[0,0,5807,11],[0,0,5930,3],[0,0,5945,3],[0,0,5985,4],[0,0,6071,3],[2,1,6106,3]]
);
runtime[40] = assertFn("!");
runtime.map((r,i) => {
  let prims = "+-×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍↑↓↕⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!˙˜˘¨⌜⁼´˝`∘○⊸⟜⌾⊘◶⎉⚇⍟";
  r.glyph = prims.charAt(i);  // Used to format
});
let bqn = src => run.apply(null,compile(str(src),runtime));

// Formatter
let fmt0 = x =>
  typeof x === "number" ?
    (x==Infinity?"∞":x==-Infinity?"¯∞":(""+x).replace(/-/g,"¯"))
  : typeof x === "function" ?
    (x.glyph||(x.m?"*"+x.m+"-modifier*":"*function*"))
  : ""+x;
let fmt1 = run(
  new Uint8Array([15,1,25,21,0,1,22,0,2,11,14,0,53,0,13,0,16,0,16,19,0,35,0,54,8,3,2,0,39,0,8,0,35,0,43,8,8,21,0,2,3,2,0,39,0,42,0,36,0,10,8,8,0,17,9,22,0,3,11,14,0,9,0,7,0,47,19,0,41,15,2,8,22,0,4,11,14,15,3,22,0,5,11,14,21,0,4,0,36,21,0,5,8,22,0,6,11,14,15,4,15,5,3,2,0,39,15,6,0,45,3,2,0,39,0,8,0,36,0,8,0,35,0,45,8,0,34,0,6,8,8,8,8,22,0,7,11,14,0,65,0,17,0,64,17,15,7,15,8,3,2,0,39,0,8,0,9,0,46,19,0,6,0,9,0,8,0,47,19,19,8,3,2,0,39,0,12,0,12,0,46,0,46,3,2,19,8,22,0,8,11,14,15,9,0,38,15,10,8,22,0,9,11,14,15,11,22,0,10,11,14,15,12,15,13,15,14,3,3,0,39,0,25,0,42,7,0,10,0,15,19,0,33,0,30,0,0,7,0,10,0,0,0,7,0,35,0,46,8,19,0,8,19,8,8,22,0,11,11,14,21,0,3,21,0,11,21,0,10,3,3,0,39,0,11,0,3,0,47,19,8,22,0,12,11,14,21,0,12,0,33,0,27,0,52,0,0,0,43,17,0,36,0,16,8,7,8,0,15,9,0,19,0,44,19,25,21,0,1,0,12,16,0,19,0,44,17,22,0,3,11,14,0,45,0,28,0,18,7,21,0,3,0,4,0,45,17,0,1,16,17,0,20,0,37,0,32,0,26,0,29,0,2,7,7,7,8,16,0,30,0,44,0,42,3,2,0,40,0,0,8,7,16,0,15,16,22,0,4,11,14,21,0,4,0,23,0,35,0,44,8,0,37,0,46,8,16,22,0,4,12,14,15,15,22,0,5,11,14,21,0,1,0,15,21,0,1,0,12,16,0,23,0,44,17,0,16,21,0,3,0,30,0,2,7,16,17,17,21,0,5,0,18,0,35,0,30,0,0,7,8,3,2,0,39,21,0,3,0,24,0,46,17,0,23,16,8,21,0,4,17,25,0,56,0,15,21,0,1,0,8,16,21,0,2,3,2,17,22,0,3,11,14,21,0,3,21,0,1,21,0,3,3,3,0,17,16,0,16,16,25,0,59,0,16,21,0,1,0,22,16,0,19,0,45,17,0,19,0,44,17,17,0,16,0,58,17,0,17,16,25,21,0,1,0,12,16,0,23,0,44,17,22,0,3,11,14,0,60,21,0,2,0,14,0,3,0,45,19,0,26,0,22,7,0,61,19,0,15,9,21,1,2,3,2,0,39,0,7,0,35,0,48,8,8,16,3,2,0,16,16,0,18,21,0,3,17,0,17,16,21,0,1,0,23,0,37,0,62,0,23,0,45,0,1,21,0,2,17,0,4,0,46,17,0,3,0,49,17,17,8,16,0,63,0,18,0,35,0,1,8,21,0,3,17,0,17,16,3,3,0,16,16,25,21,0,1,0,22,16,0,29,0,9,7,0,57,17,0,31,0,1,7,16,0,32,0,0,7,16,0,9,0,47,17,0,30,0,6,7,16,25,21,0,1,0,28,0,55,7,16,21,1,5,0,45,17,21,1,7,0,47,17,0,23,0,35,0,46,0,44,3,2,8,0,37,0,66,8,16,25,21,0,1,0,12,16,0,67,0,28,21,1,2,7,0,28,0,69,0,36,0,16,8,7,9,0,16,9,0,23,0,35,0,44,8,0,37,0,68,8,9,3,2,0,39,0,8,0,7,0,45,19,8,16,0,26,0,16,7,0,57,17,0,17,16,25,21,0,1,0,28,0,12,7,16,22,0,3,11,14,21,0,3,0,28,0,23,7,0,45,17,0,15,0,25,0,45,7,0,1,0,9,19,0,41,0,31,0,4,7,8,3,2,0,39,0,9,0,7,0,46,19,8,16,22,0,4,11,14,21,0,3,0,28,0,23,7,16,0,9,0,7,0,46,19,0,41,0,45,0,40,0,31,0,4,7,8,8,16,22,0,5,11,14,21,0,1,0,28,0,18,7,0,45,0,18,21,0,4,0,8,16,0,2,21,0,2,17,0,1,16,17,0,5,21,0,4,17,0,2,21,0,2,17,0,29,0,16,7,21,0,5,17,17,0,9,0,1,0,47,19,0,4,0,46,19,0,41,0,17,8,16,0,47,0,40,0,16,8,16,25,21,0,1,21,1,9,0,45,17,25,21,0,1,0,28,21,1,12,7,16,21,1,9,21,0,2,17,21,1,6,0,47,17,21,1,7,21,0,1,0,9,16,17,25,21,0,1,0,12,16,0,19,0,44,17,22,0,3,11,0,8,16,0,1,16,0,9,0,35,0,46,8,0,41,0,42,8,16,22,0,4,11,14,0,70,22,0,5,11,14,15,16,22,0,6,11,14,21,0,1,0,21,0,35,0,14,0,9,21,0,5,19,0,0,0,45,19,8,21,0,6,3,2,0,39,0,9,0,8,0,45,19,8,16,22,0,1,12,14,21,0,1,0,9,16,22,0,7,11,14,21,0,5,0,18,0,35,0,1,8,21,0,3,17,21,0,4,0,40,0,16,8,21,0,1,17,21,0,4,0,40,0,16,8,21,0,5,0,18,21,0,3,17,17,0,17,16,21,0,7,0,8,0,45,17,0,41,21,1,4,21,1,5,0,45,19,21,1,7,21,0,7,19,8,16,25,21,0,1,21,1,10,21,1,8,3,2,0,39,0,12,0,9,0,46,19,0,30,0,6,7,9,8,16,25,21,0,1,21,1,10,0,44,17,25,21,0,2,0,0,0,45,17,0,21,16,22,0,3,11,14,0,55,0,15,21,0,1,0,12,16,0,23,0,44,17,17,0,16,21,0,1,17,0,22,21,0,3,0,21,0,35,21,0,3,0,24,16,0,5,16,8,0,37,0,28,0,44,7,8,16,17,25,0,51,0,0,0,43,17,0,7,21,0,1,17,0,2,0,43,0,1,0,72,17,17,0,0,0,50,0,0,0,43,17,0,14,0,1,0,71,19,0,2,0,9,19,21,0,1,17,17,0,0,21,0,1,17,25])
 ,[runtime[0],runtime[1],runtime[2],runtime[6],runtime[7],runtime[9],runtime[11],runtime[12],runtime[14],runtime[15],runtime[16],runtime[18],runtime[19],runtime[20],runtime[21],runtime[22],runtime[23],runtime[24],runtime[25],runtime[26],runtime[28],runtime[30],runtime[33],runtime[34],runtime[37],runtime[41],runtime[42],runtime[43],runtime[44],runtime[45],runtime[47],runtime[48],runtime[49],runtime[50],runtime[51],runtime[52],runtime[53],runtime[54],runtime[55],runtime[56],runtime[57],runtime[59],Infinity,' ',-1,1,0,2,5,4,127,32,10,str("@"),str("\'"),str(" "),' ',str("⟨⟩"),str("⟨"),str("⟩"),str("┌"),str("·─"),str("·╵╎┆┊"),str("┘"),str("┌┐"),str("└┘"),'┐',str(""),'⥊',str("‿"),'"','␡','␀']
 ,[[0,1,0,0],[1,1,3,13],[0,0,316,6],[0,0,482,4],[0,0,521,3],[0,0,551,4],[0,0,674,3],[0,0,712,3],[0,0,751,3],[0,0,817,6],[0,0,992,3],[0,0,1002,3],[0,0,1036,8],[0,0,1218,3],[0,0,1247,3],[0,0,1257,4],[0,0,1325,3]]
)(a=>str(fmt0(a)));
let fmt = x => fmt1(x).map(c=>c===0?" ":c).join("");

if(typeof module!=='undefined'){module.exports=bqn;}
